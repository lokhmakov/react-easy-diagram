{"version":3,"file":"index.js","sources":["../src/utils/point.ts","../src/commands/clone.ts","../src/utils.ts","../src/states/linkPointEndpointState.ts","../src/states/linkPortEndpointState.ts","../src/states/visualComponentState.ts","../src/states/visualComponents.ts","../src/utils/common.ts","../src/states/linkState.ts","../src/commands/remove.ts","../src/components/BackgroundDefault.tsx","../src/hooks/useNotifyRef.ts","../src/hooks/userInteractions/useUserAbilityToSelectSwitcher.ts","../src/hooks/userInteractions/useLinkUserInteraction.ts","../src/components/LinkWrapper.tsx","../src/components/LinksLayer.tsx","../src/hooks/userInteractions/common.ts","../src/hooks/userInteractions/useCursor.ts","../src/hooks/userInteractions/useNodeUserInteraction.ts","../src/components/NodeWrapper.tsx","../src/components/NodesLayer.tsx","../src/hooks/userInteractions/useDiagramDragHandlers.ts","../src/hooks/userInteractions/useDiagramPinchHandlers.ts","../src/hooks/userInteractions/useDiagramWheelHandler.ts","../src/hooks/userInteractions/useDiagramUserInteraction.ts","../src/components/MiniControlWrapper.tsx","../src/utils/transformation.ts","../src/components/DiagramInner.tsx","../src/utils/result.ts","../src/states/callbacks.ts","../src/states/visualComponentWithDefault.ts","../src/components/Icons.tsx","../src/components/MiniControlDefault.tsx","../src/states/userInteractionSettings.ts","../src/states/diagramSettings.ts","../src/states/htmlElementRefState.ts","../src/states/diagramState.ts","../src/components/LinkDefault.tsx","../src/linkConstructors/utils.ts","../src/linkConstructors/curved.ts","../src/states/linkCreationState.ts","../src/components/Markers.tsx","../src/states/linksSettings.ts","../src/utils/guid.ts","../src/states/portState.ts","../src/states/linksStore.ts","../src/components/NodeLabel.tsx","../src/hooks/useUpdateOrCreatePortState.ts","../src/hooks/useRelativePositionStyles.ts","../src/hooks/userInteractions/usePortUserInteraction.ts","../src/components/Port.tsx","../src/components/Node.tsx","../src/states/nodesSettings.ts","../src/states/nodeState.ts","../src/states/nodesStore.ts","../src/components/PortInnerDefault.tsx","../src/states/portsSettings.ts","../src/states/selectionState.ts","../src/states/dragState.ts","../src/states/commandExecutor.ts","../src/states/rootStore.ts","../../node_modules/style-inject/dist/style-inject.es.js","../src/components/Diagram.tsx","../src/hooks/useRootStore.ts","../src/components/BackgroundWrapper.tsx","../src/utils/position.ts","../src/components/PortsContainer.tsx","../src/hooks/useDiagram.tsx","../src/linkConstructors/straight.ts"],"sourcesContent":["export type Point = [number, number];\n\nexport function isPoint(value: any): value is Point {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    value.every((v) => Number.isFinite(v))\n  );\n}\n\nexport const distanceBetweenPoints = (a: Point, b: Point): number =>\n  Math.sqrt(Math.pow(a[0] - b[0], 2) + Math.pow(a[1] - b[1], 2));\n\nexport const roundPoint = (point: Point) =>\n  [Math.round(point[0]), Math.round(point[1])] as Point;\n\nexport const addPoints = (...points: (Point | undefined | null)[]): Point =>\n  points.reduce((prev, curr) => {\n    if (curr) {\n      return [\n        (prev ? prev[0] : 0) + curr[0], \n        (prev ? prev[1] : 0) + curr[1]];\n    } else {\n      return prev;\n    }\n  }) ?? [0, 0];\n\nexport const subtractPoints = (...points: Point[]): Point =>\n  points.reduce((prev, curr) =>\n    curr ? [prev[0] - curr[0], prev[1] - curr[1]] : prev\n  );\n\nexport const multiplyPoint = (a: Point, m: number): Point => [\n  a[0] * m,\n  a[1] * m,\n];\n\nexport const arePointsEqual = (a?: Point, b?: Point): boolean =>\n  a === b || (isPoint(a) && isPoint(b) && a[0] === b[0] && a[1] === b[1]);\n","import { INodeState } from 'states/nodeState';\nimport { RootStore } from 'states/rootStore';\nimport { addPoints } from 'utils/point';\n\nexport const cloneSelectedNodesCommand = {\n  execute(rootStore: RootStore) {\n    rootStore.selectionState.selectedNodes.forEach((node) => {\n      const nodeObj = node.export() as INodeState;\n      nodeObj.id = undefined;\n      nodeObj.label = nodeObj.label;\n      nodeObj.position = addPoints(nodeObj.position, [50, 50]);\n      rootStore.nodesStore.addNode(nodeObj, false);\n    });\n  },\n};\n","import { Point } from 'utils/point';\n\nexport function clampValue(value: number, interval: Point) {\n  return Math.min(Math.max(value, interval[0]), interval[1]);\n}\n\nexport function deepCopy<TValue>(value: TValue): TValue {\n  return JSON.parse(JSON.stringify(value));\n}\n","import { makeAutoObservable } from 'mobx';\nimport { Point } from 'utils/point';\nimport { addPoints } from 'utils/point';\n\nexport class LinkPointEndpointState {\n  private _point: Point;\n\n  constructor(pos: Point) {\n    this._point = pos;\n    makeAutoObservable(this);\n  }\n\n  get point() {\n    return this._point;\n  }\n\n  translateBy = (pointToTranslateBy: Point) => {\n    this._point = addPoints(this._point, pointToTranslateBy);\n  };\n}\n","import { makeAutoObservable } from 'mobx';\nimport { addPoints, multiplyPoint, Point } from 'utils/point';\nimport { deepCopy } from 'utils';\nimport { NodeState } from 'states/nodeState';\nimport { PortState } from 'states/portState';\nimport { RootStore } from 'states/rootStore';\n\nexport class LinkPortEndpointState implements ILinkPortEndpoint {\n  private _nodeId: string;\n  private _portId: string;\n\n  private _rootStore: RootStore;\n\n  constructor(nodeId: string, portId: string, rootStore: RootStore) {\n    this._nodeId = nodeId;\n    this._portId = portId;\n    makeAutoObservable(this);\n    this._rootStore = rootStore;\n  }\n\n  export = (): ILinkPortEndpoint =>\n    deepCopy({\n      nodeId: this._nodeId,\n      portId: this._portId,\n    });\n\n  get nodeId() {\n    return this._nodeId;\n  }\n\n  get portId() {\n    return this._portId;\n  }\n\n  get node(): NodeState | undefined {\n    return this._rootStore.nodesStore.getNode(this._nodeId);\n  }\n\n  get port(): PortState | undefined {\n    return this.node?.getPort(this._portId);\n  }\n\n  get point(): Point | undefined {\n    if (\n      this.node &&\n      this.port &&\n      this.port.offsetRelativeToNode &&\n      this.port.realSize\n    ) {\n      return addPoints(\n        this.node.position,\n        addPoints(\n          this.port.offsetRelativeToNode,\n          multiplyPoint(this.port.realSize, 0.5)\n        )\n      );\n    }\n\n    return undefined;\n  }\n}\n\nexport interface ILinkPortEndpoint {\n  nodeId: string;\n  portId: string;\n}\n\nexport function linkPortEndpointsEquals(\n  a: ILinkPortEndpoint,\n  b: ILinkPortEndpoint\n): boolean {\n  return a.nodeId === b.nodeId && a.portId === b.portId;\n}\n","import {\n  action,\n  computed,\n  makeAutoObservable,\n  makeObservable,\n  observable,\n} from 'mobx';\n\nexport class VisualComponentState<TComponentProps> {\n  private _component: VisualComponent<TComponentProps>;\n  private _settings: any = null;\n\n  constructor(\n    component:\n      | IComponentDefinition<TComponentProps>\n      | VisualComponent<TComponentProps>\n  ) {\n    this.import(component);\n    makeObservable<VisualComponentState<TComponentProps>, '_component' | '_settings'>(this, {\n      _component: observable.ref,\n      _settings: observable,\n      component: computed,\n      settings: computed,\n      import: action,\n    });\n  }\n\n  import = (\n    newComponent:\n      | IComponentDefinition<TComponentProps>\n      | VisualComponent<TComponentProps>\n  ) => {\n    if ('component' in newComponent) {\n      this._component = newComponent.component;\n      this._settings = newComponent.settings ?? {};\n    } else {\n      this._component = newComponent;\n      this._settings = {};\n    }\n  };\n\n  get component() {\n    return this._component;\n  }\n  get settings() {\n    return this._settings;\n  }\n}\n\nexport interface IVisualComponentProps<TEntity, TSettings = any> {\n  entity: TEntity;\n  settings?: TSettings;\n}\n\nexport type VisualComponent<\n  TComponentProps\n> = React.FunctionComponent<TComponentProps>;\n\nexport interface IComponentDefinition<TComponentProps, TSettings = any> {\n  component: VisualComponent<TComponentProps>;\n  settings?: TSettings;\n}\n","import { makeAutoObservable } from 'mobx';\nimport { Dictionary } from 'utils/common';\nimport {\n  IVisualComponentProps,\n  VisualComponentState,\n  IComponentDefinition,\n  VisualComponent,\n} from 'states/visualComponentState';\n\nexport class VisualComponents<\n  TEntity,\n  TComponentProps extends IVisualComponentProps<TEntity>\n> {\n  private _defaultType: string = componentDefaultType;\n  private _defaultComponents: Dictionary<VisualComponentState<TComponentProps>>;\n  private _components: Dictionary<VisualComponentState<TComponentProps>>;\n\n  constructor(\n    defaultComponents: Dictionary<\n      IComponentDefinition<TComponentProps> | VisualComponent<TComponentProps>\n    >\n  ) {\n    this._defaultComponents = this._createComponentCollection(\n      defaultComponents\n    );\n    this._components = { ...this._defaultComponents };\n    makeAutoObservable(this);\n  }\n\n  import = (obj?: IVisualComponentsObject<TComponentProps>) => {\n    this.setDefaultType(obj?.defaultType);\n\n    this._components = {\n      ...this._defaultComponents,\n      ...this._createComponentCollection(obj?.components),\n    };\n  };\n\n  getComponent = (\n    type: string | undefined | null\n  ): VisualComponentState<TComponentProps> => {\n    const finalComponentType = type ?? this.defaultType;\n    return (\n      this._components[finalComponentType] ?? this._components[this.defaultType]\n    );\n  };\n\n  get defaultType() {\n    return this._defaultType;\n  }\n\n  setDefaultType = (value: string | undefined | null) => {\n    this._defaultType = value ?? componentDefaultType;\n  };\n\n  private _createComponentCollection = (\n    componentsObjects?: Dictionary<\n      IComponentDefinition<TComponentProps> | VisualComponent<TComponentProps>\n    >\n  ): Dictionary<VisualComponentState<TComponentProps>> => {\n    const collection: Dictionary<VisualComponentState<TComponentProps>> = {};\n\n    componentsObjects &&\n      Object.entries(componentsObjects).forEach(([key, value]) => {\n        collection[key] = new VisualComponentState<TComponentProps>(value);\n      });\n\n    return collection;\n  };\n}\n\nexport const componentDefaultType = 'default';\n\nexport interface IVisualComponentsObject<TComponentProps> {\n  defaultType?: string;\n  components?: Dictionary<\n    IComponentDefinition<TComponentProps> | VisualComponent<TComponentProps>\n  >;\n}\n","import { Point } from 'utils/point';\n\nexport type BoundingBox = {\n  topLeftCorner: Point;\n  bottomRightCorner: Point;\n  size: Point;\n};\n\nexport interface Dictionary<TValue> {\n  [key: string]: TValue;\n}\n\nexport type Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\n\nexport function isNumber(value: any): value is number {\n  return Number.isFinite(value);\n}\n\nexport function isObject(value: any): value is object {\n  return value != null && typeof value == 'object' && !Array.isArray(value);\n}\n\nexport function isBoolean(value: any): value is boolean {\n  return value != null && typeof value == 'boolean';\n}","import { makeAutoObservable } from 'mobx';\nimport { Point } from 'utils/point';\nimport { deepCopy } from 'utils';\nimport { LinkPointEndpointState } from 'states/linkPointEndpointState';\nimport {\n  LinkPortEndpointState,\n  ILinkPortEndpoint,\n} from 'states/linkPortEndpointState';\nimport { RootStore } from 'states/rootStore';\nimport { componentDefaultType } from 'states/visualComponents';\nimport { isBoolean } from 'utils/common';\n\nexport class LinkState\n  implements ILinkState, ILinkInteractionState {\n  private _id: string;\n  private _type: string;\n  private _source: LinkPortEndpointState;\n  private _target: LinkPortEndpointState;\n  private _segments: ILinkSegment[];\n  private _selected: boolean;\n  private _hovered: boolean;\n  private _extra: any;\n  private _isSelectionEnabled: boolean | null;\n  \n  private _rootStore: RootStore;\n\n  constructor(rootStore: RootStore, id: string, state: ILinkStateWithoutId) {\n    this._rootStore = rootStore;\n\n    this._id = id;\n    this._selected = false;\n    this._hovered = false;\n    this.import(state);\n\n    makeAutoObservable(this, {\n      // @ts-ignore\n      _rootStore: false,\n    });\n  }\n  \n  import = (state: ILinkStateWithoutId) => {\n    this._source = this._createEndpointState(state.source);\n    this._target = this._createEndpointState(state.target);\n    this.setType(state.type);\n    this.setSegments(state.segments);\n    this.setExtra(state.extra);\n    this.setIsSelectionEnabled(state?.isSelectionEnabled);\n  };\n  \n  private _createEndpointState = (\n    endpoint: ILinkPortEndpoint\n  ): LinkPortEndpointState => {\n    return new LinkPortEndpointState(\n      endpoint.nodeId,\n      endpoint.portId,\n      this._rootStore\n    );\n  };\n  \n  export = (): ILinkStateWithId => ({\n    source: this.source.export(),\n    target: this.target.export(),\n    ...deepCopy({\n      id: this._id,\n      type: this.type,\n      segments: this.segments,\n      extra: this.extra,\n      isSelectionEnabled: this._isSelectionEnabled ?? undefined,\n    }),\n  });\n\n  get id() {\n    return this._id;\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  setType = (value: string | null | undefined) => {\n    this._type = value ?? componentDefaultType;\n  };\n\n  get segments() {\n    return this._segments;\n  }\n\n  setSegments = (value: ILinkSegment[] | null | undefined) => {\n    this._segments = value ?? [];\n  };\n\n  get path(): ILinkPath | undefined {\n    return createLinkPath(this._rootStore, this.source, this.target);\n  }\n\n  get componentDefinition() {\n    const { visualComponents } = this._rootStore.linksSettings;\n    return visualComponents.getComponent(this.type);\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(value: boolean) {\n    this._selected = value;\n  }\n\n  get hovered() {\n    return this._hovered;\n  }\n\n  set hovered(value: boolean) {\n    this._hovered = value;\n  }\n\n  get extra() {\n    return this._extra;\n  }\n\n  get source() {\n    return this._source;\n  }\n\n  get target() {\n    return this._target;\n  }\n\n  setExtra = (value: any) => {\n    this._extra = value ?? null;\n  };\n\n  get isSelectionEnabled(): boolean {\n    return this._isSelectionEnabled === null\n      ? this._rootStore.diagramSettings.userInteraction.linkSelection\n      : this._isSelectionEnabled;\n  }\n\n  setIsSelectionEnabled = (value: boolean | null | undefined) => {\n    this._isSelectionEnabled = isBoolean(value) ? value : null;\n  };\n}\n\nexport function createLinkPath(\n  rootStore: RootStore,\n  source: LinkPortEndpointState,\n  target: LinkPortEndpointState | LinkPointEndpointState\n): ILinkPath | undefined {\n  const { linksSettings } = rootStore;\n  if (\n    !source.port ||\n    (target instanceof LinkPortEndpointState && !target.port) ||\n    !source.point ||\n    !target.point\n  ) {\n    return undefined;\n  }\n\n  const pathStr = linksSettings.pathConstructor(\n    {\n      point: source.point,\n      portType: source.port.type,\n      direction: source.port.linkDirection,\n    },\n    {\n      point: target.point,\n      portType:\n        target instanceof LinkPointEndpointState\n          ? undefined\n          : target.port!.type,\n      direction:\n        target instanceof LinkPointEndpointState\n          ? undefined\n          : target.port!.linkDirection,\n    }\n  );\n\n  return {\n    svgPath: pathStr,\n    source: source.point,\n    target: target.point,\n  };\n}\n\nexport interface ILinkInteractionState {\n  selected: boolean;\n  hovered: boolean;\n}\n\nexport interface ILinkStateWithoutId {\n  type?: string;\n  source: ILinkPortEndpoint;\n  target: ILinkPortEndpoint;\n  segments?: ILinkSegment[];\n  extra?: any;\n  isSelectionEnabled?: boolean;\n}\n\nexport interface ILinkStateWithId extends ILinkStateWithoutId {\n  id: string;\n}\n\nexport interface ILinkState extends ILinkStateWithoutId {\n  id?: string;\n}\n\nexport interface ILinkSegment {\n  position: Point;\n}\n\nexport interface ILinkPath {\n  svgPath: string;\n  source: Point;\n  target: Point;\n}\n","import { LinkState } from 'states/linkState';\nimport { RootStore } from 'states/rootStore';\n\nexport const removeSelectedCommand = {\n  execute(rootStore: RootStore) {\n    removeSelectedNodesCommand.execute(rootStore);\n    removeSelectedLinksCommand.execute(rootStore);\n  },\n};\n\nexport const removeSelectedNodesCommand = {\n  execute(rootStore: RootStore) {\n    rootStore.selectionState.selectedNodes.forEach((node) => {\n      rootStore.nodesStore.removeNode(node.id);\n    });\n  },\n};\n\nexport const removeSelectedLinksCommand = {\n  execute(rootStore: RootStore) {\n    rootStore.selectionState.selectedItems\n      .filter((i) => i instanceof LinkState)\n      .forEach((link: LinkState) => {\n        rootStore.linksStore.removeLink(link.id);\n      });\n  },\n};\n","import { observer } from 'mobx-react-lite';\nimport React, { useMemo } from 'react';\nimport type { IComponentDefinition } from 'states/visualComponentState';\nimport type { IBackgroundComponentProps } from 'states/diagramSettings';\n\nconst BackgroundDefault: React.FC<\n  IBackgroundComponentProps<IBackgroundDefaultSettings>\n> = observer(({ diagramOffset, diagramZoom, settings }) => {\n  const finalSettings = settings ?? defaultSettings;\n\n  const backgroundImage = useMemo(\n    () =>\n      finalSettings.imageGenerator\n        ? finalSettings.imageGenerator(100 * diagramZoom, 100 * diagramZoom)\n        : undefined,\n    [finalSettings, finalSettings.imageGenerator, diagramZoom]\n  );\n\n  return (\n    <div\n      className='react_fast_diagram_Background_Default'\n      style={{\n        backgroundColor: finalSettings.color,\n        backgroundImage,\n        backgroundPosition: `${diagramOffset[0]}px ${diagramOffset[1]}px`,\n      }}\n    />\n  );\n});\n\nconst gridImageGenerator = (\n  width: number,\n  height: number,\n  sizeMultiplicator: number,\n  linesColor: string,\n  linesOpacity: number\n) => {\n  linesColor = linesColor.replace('#', '%23');\n  return `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='${\n    width * sizeMultiplicator\n  }' height='${\n    height * sizeMultiplicator\n  }' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='${linesColor}' fill-opacity='${linesOpacity}'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`;\n};\n\nexport const createGridImageGenerator = (\n  sizeMultiplicator: number,\n  linesColor: string,\n  linesOpacity: number\n): BackgroundImageGenerator => (width: number, height: number) =>\n  gridImageGenerator(\n    width,\n    height,\n    sizeMultiplicator,\n    linesColor,\n    linesOpacity\n  );\n\nconst dotsImageGenerator = (\n  width: number,\n  height: number,\n  sizeMultiplicator: number,\n  dotsColor: string,\n  dotsOpacity: number,\n  dotsRadius: number\n) => {\n  sizeMultiplicator = 0.1 * sizeMultiplicator;\n  dotsColor = dotsColor.replace('#', '%23');\n  return `url(\"data:image/svg+xml,%3Csvg width='${\n    width * sizeMultiplicator\n  }' height='${\n    height * sizeMultiplicator\n  }' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='${dotsColor}' fill-opacity='${dotsOpacity}' fill-rule='evenodd'%3E%3Ccircle cx='3' cy='3' r='${dotsRadius}'/%3E%3Ccircle cx='13' cy='13' r='${dotsRadius}'/%3E%3C/g%3E%3C/svg%3E\")`;\n};\n\nexport const createDotsImageGenerator = (\n  sizeMultiplicator: number,\n  dotsColor: string,\n  dotsOpacity: number,\n  dotsRadius: number\n): BackgroundImageGenerator => (width: number, height: number) =>\n  dotsImageGenerator(\n    width,\n    height,\n    sizeMultiplicator,\n    dotsColor,\n    dotsOpacity,\n    dotsRadius\n  );\n\nconst crossesImageGenerator = (\n  width: number,\n  height: number,\n  sizeMultiplicator: number,\n  color: string,\n  opacity: number\n) => {\n  color = color.replace('#', '%23');\n  return `url(\"data:image/svg+xml,%3Csvg width='${\n    width * sizeMultiplicator\n  }' height='${\n    height * sizeMultiplicator\n  }' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='${color}' fill-opacity='${opacity}'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`;\n};\n\nexport const createCrossesImageGenerator = (\n  sizeMultiplicator: number,\n  color: string,\n  opacity: number\n): BackgroundImageGenerator => (width: number, height: number) =>\n  crossesImageGenerator(width, height, sizeMultiplicator, color, opacity);\n\nconst defaultSettings: IBackgroundDefaultSettings = {\n  imageGenerator: createCrossesImageGenerator(0.2, '#858585', 0.1),\n  color: '#ffffff',\n};\n\nexport const createDefaultBackground = (\n  settings?: Partial<IBackgroundDefaultSettings>\n): IComponentDefinition<\n  IBackgroundComponentProps,\n  IBackgroundDefaultSettings\n> => {\n  const finalSettings = {\n    ...defaultSettings,\n    ...(settings ? settings : {}),\n  };\n\n  return {\n    component: BackgroundDefault,\n    settings: finalSettings,\n  };\n};\n\nexport type BackgroundImageGenerator = (\n  width: number,\n  height: number\n) => string;\n\n/**\n * @property {function}  imageGenerator - Function to create string for css's backgroundUrl property.\n * You can use for example services like listed in this article https://css-tricks.com/websites-generate-svg-patterns/\n * to generate this string.\n */\nexport interface IBackgroundDefaultSettings {\n  imageGenerator?: BackgroundImageGenerator;\n  color: string;\n}\n","import { useState } from 'react';\n\nexport const useNotifyRef = <TValue>(\n  init: TValue\n): React.MutableRefObject<TValue> => {\n  const [_, forceUpdate] = useState(0);\n  const [ref] = useState(() => ({\n    value: init,\n    facade: {\n      get current() {\n        return ref.value;\n      },\n      set current(value) {\n        const last = ref.value;\n        if (last !== value) {\n          ref.value = value;\n          forceUpdate((i) => i + 1);\n        }\n      },\n    },\n  }));\n\n  return ref.facade;\n};\n","import { useEffect } from \"react\";\n\nexport const DISABLED_USER_SELECT_CSS_CLASS =\n  'react_fast_diagram_disabled_user_select';\n\nexport function useUserAbilityToSelectSwitcher(\n  active: boolean,\n  elementToSwitchUserSelectOn: HTMLElement | undefined\n) {\n  useEffect(() => {\n    if (!active || !elementToSwitchUserSelectOn) {\n      return;\n    }\n\n    if (\n      elementToSwitchUserSelectOn.classList.contains(\n        DISABLED_USER_SELECT_CSS_CLASS\n      )\n    ) {\n      return;\n    }\n\n    elementToSwitchUserSelectOn.classList.add(DISABLED_USER_SELECT_CSS_CLASS);\n\n    return () => {\n      elementToSwitchUserSelectOn.classList.remove(\n        DISABLED_USER_SELECT_CSS_CLASS\n      );\n    };\n  }, [active, elementToSwitchUserSelectOn]);\n}\n","import { useNotifyRef } from 'hooks/useNotifyRef';\nimport { useRootStore } from 'hooks/useRootStore';\nimport { useMemo, useRef } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport { ReactEventHandlers } from 'react-use-gesture/dist/types';\nimport { LinkCreationState } from 'states/linkCreationState';\nimport { LinkState } from 'states/linkState';\nimport { GestureHandlers } from 'hooks/userInteractions/common';\nimport { useUserAbilityToSelectSwitcher } from 'hooks/userInteractions/useUserAbilityToSelectSwitcher';\n\nexport const useLinkUserInteraction = (\n  linkState: LinkState | LinkCreationState\n): IUseLinkUserInteractionResult => {\n  const rootStore = useRootStore();\n\n  const activeRef = useNotifyRef(false);\n  const selectionHandledRef = useRef(false);\n  const selectionTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  const handlers = useMemo<GestureHandlers>(\n    () =>\n      linkState instanceof LinkState\n        ? {\n            onPointerEnter: () => {\n              linkState.hovered = true;\n            },\n            onPointerLeave: () => {\n              linkState.hovered = false;\n            },\n            onDragStart: () => {\n              activeRef.current = !rootStore.dragState.isActive;\n              if (activeRef.current) {\n                selectionHandledRef.current = false;\n  \n                if (linkState.isSelectionEnabled) {\n                  selectionTimeoutRef.current = global.setTimeout(() => {\n                    if (!selectionHandledRef.current) {\n                      selectionHandledRef.current = true;\n                      rootStore.selectionState.switch(linkState);\n                    }\n                  }, selectDelay);\n                }\n              }\n            },\n            onDragEnd: ({ tap, ctrlKey }) => {\n              if (activeRef.current) {\n                activeRef.current = false;\n                if (selectionTimeoutRef.current) {\n                  clearTimeout(selectionTimeoutRef.current);\n                }\n  \n                if (\n                  linkState.isSelectionEnabled &&\n                  tap &&\n                  !selectionHandledRef.current\n                ) {\n                  selectionHandledRef.current = true;\n                  rootStore.selectionState.select(linkState, !ctrlKey);\n                }\n              }\n            },\n          }\n        : {},\n    [linkState, rootStore]\n  );\n\n  const bind = useGesture(handlers, {\n    eventOptions: { passive: false },\n  });\n\n  useUserAbilityToSelectSwitcher(\n    activeRef.current,\n    rootStore.diagramState.diagramInnerRef.current?.ownerDocument?.body\n  );\n\n  return { bind };\n};\n\nconst selectDelay: number = 500;\n\nexport interface IUseLinkUserInteractionResult {\n  bind: (...args: any[]) => ReactEventHandlers;\n}\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { useLinkUserInteraction } from 'hooks/userInteractions/useLinkUserInteraction';\nimport { LinkCreationState } from 'states/linkCreationState';\nimport { LinkState } from 'states/linkState';\n\nexport const LinkWrapper = observer<{ link: LinkState | LinkCreationState }>(\n  ({ link }) => {\n    const { bind } = useLinkUserInteraction(link);\n\n    return (\n      <g>\n        <link.componentDefinition.component\n          bind={bind}\n          entity={link}\n          settings={link.componentDefinition.settings}\n        />\n      </g>\n    );\n  }\n);\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { LinksStore } from 'states/linksStore';\nimport { LinkWrapper } from 'components/LinkWrapper';\nimport { useRootStore } from 'hooks/useRootStore';\n\nexport const LinksLayer = observer<{linksStore: LinksStore}>(({linksStore}) => {\n  const rootStore = useRootStore();\n  \n  return (\n    <svg className=\"react_fast_diagram_Layer\">\n      <defs>\n        {rootStore.linksSettings.svgMarkers.map((Marker,i) => <Marker key={i}/>)}\n      </defs>\n\n      {Array.from(linksStore.links).map(([id, link]) => (\n        <LinkWrapper key={link.id} link={link} />\n      ))}\n      {<LinkWrapper key='__creation__' link={linksStore.linkCreation} />}\n    </svg>\n  );\n});\n","import {\n  EventTypes,\n  NativeHandlers,\n  UserHandlers,\n  Vector2,\n} from 'react-use-gesture/dist/types';\nimport { Point } from 'utils/point';\n\n/**\n * Check each element starting from the first one in composedPath() (see https://developer.mozilla.org/en-US/docs/Web/API/Event/composedPath),\n * if exceptClassName is the first class found -> return false,\n * if className is the first class found -> return true,\n * if neither exceptClassName nor className were found -> return false\n */\nexport const eventPathContainsClass = (\n  event: PointerEvent | React.PointerEvent<Element>,\n  className: string,\n  exceptClassName?: string\n) => {\n  const typedEvent = event as Event;\n  if ('composedPath' in typedEvent) {\n    const targets = typedEvent.composedPath();\n    for (let i = 0; i < targets.length; i++) {\n      const target = targets[i];\n      if ('classList' in target) {\n        const classList = (target as Element).classList;\n        if (exceptClassName && classList.contains(exceptClassName)) {\n          return false;\n        } else if (classList.contains(className)) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n};\n\n/**\n * Does gesture can be potentially a tap/click event?\n * Drag gesture will be tap/click gesture on mouse or touch release only when the drag displacement is inferior to 3 pixels.\n * See useGestures documetation for more information.\n * @param movement - state value of gesture, represent gesture offset\n */\nexport function canDragGestureBeTapInstead(movement: Vector2): boolean {\n  return Math.max(Math.abs(movement[0]), Math.abs(movement[1])) < 3;\n}\n\nexport interface IUserInteractionTranslate {\n  offset: Point;\n  setOffset: (newOffset: Point) => any;\n}\n\nexport interface IUserInteractionTranslateAndZoom {\n  offset: Point;\n  zoom: number;\n  tranlsateAndZoomInto: (\n    translateBy: Point,\n    pointToZoomInto: Point,\n    changeZoomBy: number\n  ) => any;\n}\n\nexport type GestureHandlers = Partial<\n  UserHandlers<EventTypes> & NativeHandlers<EventTypes>\n>;\n","import { useRootStore } from 'hooks/useRootStore';\nimport React, { useEffect, useRef } from 'react';\n\nexport function useCursor(\n  active: boolean,\n  cursor: React.CSSProperties['cursor'],\n  ref: HTMLDivElement | null\n) {\n  const cursorBeforeSetRef = useRef<string>('');\n\n  useEffect(() => {\n    if (!active || !ref || !cursor || ref.style.cursor === cursor) {\n      return;\n    }\n\n    cursorBeforeSetRef.current = ref.style.cursor;\n    ref.style.cursor = cursor;\n\n    return () => {\n      ref.style.cursor = cursorBeforeSetRef.current;\n    };\n  }, [active, ref]);\n}\n\nexport function useDiagramCursor(\n  active: boolean,\n  cursor: React.CSSProperties['cursor']\n) {\n  const { diagramState } = useRootStore();\n  const ref = diagramState.diagramInnerRef.current;\n\n  useCursor(active, cursor, ref);\n}\n","import {\n  canDragGestureBeTapInstead,\n  eventPathContainsClass,\n  GestureHandlers,\n} from 'hooks/userInteractions/common';\nimport { useCursor, useDiagramCursor } from 'hooks/userInteractions/useCursor';\nimport { useUserAbilityToSelectSwitcher } from 'hooks/userInteractions/useUserAbilityToSelectSwitcher';\nimport { useRootStore } from 'hooks/useRootStore';\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport { NodeState } from 'states/nodeState';\nimport { multiplyPoint } from 'utils/point';\n\nexport const useNodeUserInteraction = (\n  nodeState: NodeState\n): React.RefObject<HTMLElement> => {\n  const rootStore = useRootStore();\n\n  const interactionActiveRef = useRef<boolean>(false);\n  const selectOnLongTapRef = useRef<NodeJS.Timeout | null>(null);\n  const cancelSelectOnLongTap = useCallback(() => {\n    if (selectOnLongTapRef.current) {\n      clearTimeout(selectOnLongTapRef.current);\n      selectOnLongTapRef.current = null;\n      return true;\n    }\n    return false;\n  }, [selectOnLongTapRef]);\n  const userInteractionElemRef = useRef<HTMLElement>(null);\n\n  const handlers = useMemo<GestureHandlers>(\n    () => ({\n      onDrag: ({ pinching, delta, movement }) => {\n        if (\n          !interactionActiveRef.current ||\n          pinching ||\n          canDragGestureBeTapInstead(movement)\n        ) {\n          return;\n        }\n        cancelSelectOnLongTap();\n\n        if (rootStore.dragState.isActive && !nodeState.isDragActive) return;\n        if (!nodeState.isDragEnabled) return;\n\n        if (!nodeState.isDragActive) {\n          rootStore.dragState.startDragging(nodeState);\n        }\n\n        rootStore.dragState.dragBy(\n          multiplyPoint(delta, 1 / rootStore.diagramState.zoom)\n        );\n      },\n      onDragStart: ({ event }) => {\n        interactionActiveRef.current =\n          allowNodeInteraction(event) && !rootStore.dragState.isActive;\n\n        if (interactionActiveRef.current) {\n          cancelSelectOnLongTap();\n          if (nodeState.isSelectionEnabled) {\n            selectOnLongTapRef.current = global.setTimeout(() => {\n              if (selectOnLongTapRef.current) {\n                selectOnLongTapRef.current = null;\n                rootStore.selectionState.switch(nodeState);\n              }\n            }, selectDelay);\n          }\n        }\n      },\n      onDragEnd: ({ tap, ctrlKey }) => {\n        if (interactionActiveRef.current) {\n          interactionActiveRef.current = false;\n          const selectLongOnTapCancelled = cancelSelectOnLongTap();\n\n          if (nodeState.isDragActive) {\n            rootStore.dragState.stopDragging();\n          }\n\n          // selectLongOnTapCancelled means that callback in timer wasn't executed yet\n          if (nodeState.isSelectionEnabled && tap && selectLongOnTapCancelled) {\n            rootStore.selectionState.select(nodeState, !ctrlKey);\n          }\n        }\n      },\n    }),\n    [nodeState, rootStore]\n  );\n\n  useGesture(handlers, {\n    domTarget: userInteractionElemRef,\n    eventOptions: { passive: false },\n  });\n\n  useUserAbilityToSelectSwitcher(\n    interactionActiveRef.current,\n    userInteractionElemRef.current?.ownerDocument?.body\n  );\n\n  useDiagramCursor(nodeState.isDragActive, 'move');\n  useCursor(nodeState.isDragActive, 'move', nodeState.ref.current);\n\n  return userInteractionElemRef;\n};\n\nconst selectDelay: number = 500;\n\nfunction allowNodeInteraction(\n  event: React.PointerEvent<Element> | PointerEvent\n) {\n  return eventPathContainsClass(\n    event,\n    enableNodeUserInteractionClassName,\n    disableNodeUserInteractionClassName\n  );\n}\n\nexport const enableNodeUserInteractionClassName =\n  'react_easy_diagram_enable_node_user_interaction';\nexport const disableNodeUserInteractionClassName =\n  'react_easy_diagram_disable_node_user_interaction';\n","import React, { useEffect, useLayoutEffect, useMemo } from 'react';\nimport {\n  enableNodeUserInteractionClassName,\n  useNodeUserInteraction,\n} from 'hooks/userInteractions/useNodeUserInteraction';\nimport { NodeState } from 'states/nodeState';\nimport { observer } from 'mobx-react-lite';\nimport { useNotifyRef } from 'hooks/useNotifyRef';\nimport { action } from 'mobx';\n\nexport const NodeWrapper = observer<{ node: NodeState }>(({ node }) => {\n  const userInteractionElemRef = useNodeUserInteraction(node);\n  const renderedPortsContextValue = usePortsCleanUp(node);\n\n  return (\n    <NodeContext.Provider value={node}>\n      <RenderedPortsComponentsContext.Provider\n        value={renderedPortsContextValue}\n      >\n        <div\n          id={node.id}\n          className={className}\n          style={{\n            transform: `translate(${node.position[0]}px, ${node.position[1]}px)`,\n            zIndex: node.selected ? 10 : undefined,\n          }}\n          ref={node.ref}\n        >\n          <node.componentDefinition.component\n            draggableRef={userInteractionElemRef}\n            entity={node}\n            settings={node.componentDefinition.settings}\n          />\n        </div>\n      </RenderedPortsComponentsContext.Provider>\n    </NodeContext.Provider>\n  );\n});\n\nexport const NodeContext = React.createContext<NodeState | null>(null);\ninterface IRenderedPorts {\n  render: (id: string) => void;\n  unrender: (id: string) => void;\n}\nexport const RenderedPortsComponentsContext = React.createContext<IRenderedPorts>(\n  { render: () => undefined, unrender: () => undefined }\n);\nexport const className = `react_fast_diagram_NodeWrapper ${enableNodeUserInteractionClassName}`;\n\n/**\n * Clean up old ports.\n * @param node\n * @returns ports that are currently rendered\n */\nconst usePortsCleanUp = (node: NodeState): IRenderedPorts => {\n  const renderedPortsRef = useNotifyRef<string[]>([]);\n  const renderedPortsContextValue = useMemo<IRenderedPorts>(\n    () => ({\n      render: (id: string) => {\n        if (!renderedPortsRef.current.includes(id)) {\n          renderedPortsRef.current = [...renderedPortsRef.current, id];\n        }\n      },\n      unrender: (id: string) => {\n        if (renderedPortsRef.current.includes(id)) {\n          renderedPortsRef.current = renderedPortsRef.current.filter(\n            (oldId) => oldId !== id\n          );\n        }\n      },\n    }),\n    [renderedPortsRef]\n  );\n\n  useLayoutEffect(() => {\n    renderedPortsRef.current = [];\n  }, [node, renderedPortsRef]);\n\n  useEffect(() => {\n    const extraPortsIds = Object.keys(node.ports).filter(\n      (id) => !renderedPortsRef.current.includes(id)\n    );\n    action(() => extraPortsIds.forEach((id) => node.removePort(id)));\n  }, [renderedPortsRef.current]);\n\n  return renderedPortsContextValue;\n};\n","import { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { useRootStore } from 'hooks/useRootStore';\nimport { NodesStore } from 'states/nodesStore';\nimport { NodeWrapper } from 'components/NodeWrapper';\n\nexport const NodesLayer = observer<{nodesStore: NodesStore}>(({nodesStore}) => {\n  const rootStore = useRootStore();\n\n  useEffect(() => {\n    rootStore.diagramState.zoomToFit();\n  }, [])\n\n  return (\n    <div className=\"react_fast_diagram_Layer\">\n      {Array.from(nodesStore.nodes).map(([id, node]) => (\n        <NodeWrapper key={node.id} node={node} />\n      ))}\n    </div>\n  );\n});\n","import { useMemo } from 'react';\nimport { Handler } from 'react-use-gesture/dist/types';\nimport { useRootStore } from 'hooks/useRootStore';\nimport { useNotifyRef } from 'hooks/useNotifyRef';\nimport { useUserAbilityToSelectSwitcher } from 'hooks/userInteractions/useUserAbilityToSelectSwitcher';\nimport { addPoints } from 'utils/point';\nimport { useDiagramCursor } from 'hooks/userInteractions/useCursor';\n\ntype DragEventHandler =\n  | Handler<'drag', React.PointerEvent<Element> | PointerEvent>\n  | undefined;\n\nexport interface IDragHandlers {\n  onDrag: DragEventHandler;\n  onDragStart: DragEventHandler;\n  onDragEnd: DragEventHandler;\n}\n\nexport function useDiagramDragHandlers(\n  cancelEvent?: (event: React.PointerEvent<Element> | PointerEvent) => boolean\n): IDragHandlers {\n  const rootStore = useRootStore();\n  const diagramState = rootStore.diagramState;\n\n  const activeRef = useNotifyRef(false);\n  const handlers = useMemo<IDragHandlers>(\n    () => ({\n      onDrag: ({ pinching, delta }) => {\n        if (!activeRef.current || pinching) {\n          return;\n        }\n        diagramState.setOffset(addPoints(diagramState.offset, delta));\n      },\n      onDragStart: ({ event, cancel }) => {\n        if (cancelEvent && cancelEvent(event)) {\n          cancel();\n          return;\n        }\n        // Do not activate so drag will not be performed, but also don't cancel, as it would not be possible to clear selection\n        if (\n          !rootStore.diagramSettings.userInteraction.diagramPan ||\n          event.buttons !== 1\n        ) {\n          return;\n        }\n        activeRef.current = true;\n      },\n      onDragEnd: ({ tap }) => {\n        if (tap) {\n          rootStore.selectionState.unselectAll();\n        }\n        activeRef.current = false;\n      },\n    }),\n    [activeRef, diagramState, cancelEvent, rootStore]\n  );\n\n  useUserAbilityToSelectSwitcher(\n    activeRef.current,\n    diagramState.diagramInnerRef.current?.ownerDocument?.body\n  );\n\n  useDiagramCursor(activeRef.current, 'grabbing');\n\n  return handlers;\n}\n","import { useMemo, useRef } from 'react';\nimport { Handler, WebKitGestureEvent } from 'react-use-gesture/dist/types';\nimport { Point, subtractPoints } from 'utils/point';\nimport { useRootStore } from 'hooks/useRootStore';\nimport { useNotifyRef } from 'hooks/useNotifyRef';\nimport { useUserAbilityToSelectSwitcher } from 'hooks/userInteractions/useUserAbilityToSelectSwitcher';\n\ntype PinchEvent =\n  | React.TouchEvent\n  | TouchEvent\n  | React.WheelEvent\n  | WheelEvent\n  | WebKitGestureEvent;\n\ntype PinchEventHandler = Handler<'pinch', PinchEvent> | undefined;\n\ninterface IPinchHandlers {\n  onPinch: PinchEventHandler;\n  onPinchStart: PinchEventHandler;\n  onPinchEnd: PinchEventHandler;\n}\n\nexport function useDiagramPinchHandlers(\n  cancel: (event: PinchEvent) => boolean\n): IPinchHandlers {\n  const { diagramState, diagramSettings } = useRootStore();\n\n  const activeRef = useNotifyRef(false);\n  const pinchState = useRef<IPinchState>({\n    distance: 0,\n    origin: [0, 0],\n    elementLeftTop: [0, 0],\n  });\n\n  const handlers = useMemo<IPinchHandlers>(\n    () => ({\n      onPinch: ({ da: [distance], origin }) => {\n        if (!activeRef.current || !diagramState.diagramInnerRef.current) {\n          return;\n        }\n        const originDiff = diagramSettings.userInteraction.diagramPan\n          ? subtractPoints(origin, pinchState.current.origin)\n          : ([0, 0] as Point);\n\n        const originPositionOnElement = subtractPoints(\n          origin,\n          pinchState.current.elementLeftTop\n        );\n\n        diagramState.tranlsateAndZoomInto(\n          originDiff,\n          originPositionOnElement,\n          distance / pinchState.current.distance\n        );\n\n        pinchState.current = {\n          distance,\n          origin,\n          elementLeftTop: pinchState.current.elementLeftTop,\n        };\n      },\n      onPinchStart: ({ da: [distance], origin, event }) => {\n        if (\n          !diagramSettings.userInteraction.diagramZoom ||\n          cancel(event) ||\n          !diagramState.diagramInnerRef.current\n        ) {\n          return;\n        }\n\n        const rect = diagramState.diagramInnerRef.current.getBoundingClientRect();\n        pinchState.current = {\n          distance,\n          origin,\n          elementLeftTop: [rect.left, rect.top],\n        };\n        activeRef.current = true;\n      },\n      onPinchEnd: () => (activeRef.current = false),\n    }),\n    [\n      diagramState.diagramInnerRef.current,\n      activeRef,\n      diagramState,\n      cancel,\n      diagramSettings,\n    ]\n  );\n\n  useUserAbilityToSelectSwitcher(\n    activeRef.current,\n    diagramState.diagramInnerRef.current?.ownerDocument?.body\n  );\n\n  return handlers;\n}\n\ninterface IPinchState {\n  distance: number;\n  origin: Point;\n  elementLeftTop: Point;\n}\n","import { useMemo } from 'react';\nimport { Handler } from 'react-use-gesture/dist/types';\nimport { subtractPoints } from 'utils/point';\nimport type { IUserInteractionTranslateAndZoom } from 'hooks/userInteractions/common';\nimport { useRootStore } from 'hooks/useRootStore';\n\nexport function useDiagramWheelHandler(\n  state: IUserInteractionTranslateAndZoom\n): IWheelHandler {\n  const { diagramState, diagramSettings } = useRootStore();\n\n  const handlers = useMemo<IWheelHandler>(\n    () => ({\n      onWheel: ({ direction: [_, yDirection], event }) => {\n        if (\n          !diagramState.diagramInnerRef.current ||\n          !diagramSettings.userInteraction.diagramZoom\n        )\n          return;\n        event?.preventDefault();\n        const rect = diagramState.diagramInnerRef.current.getBoundingClientRect();\n\n        const mousePositionOnElement = subtractPoints(\n          [event.clientX, event.clientY],\n          [rect.left, rect.top]\n        );\n\n        let factor = 0.9;\n        if (yDirection < 0) {\n          factor = 1 / factor;\n        }\n\n        state.tranlsateAndZoomInto([0, 0], mousePositionOnElement, factor);\n      },\n    }),\n    [diagramState.diagramInnerRef, state, diagramSettings]\n  );\n\n  return handlers;\n}\n\ntype WheelEventHandler =\n  | Handler<'wheel', React.WheelEvent<Element> | WheelEvent>\n  | undefined;\n\ninterface IWheelHandler {\n  onWheel: WheelEventHandler;\n}\n","import React, { useCallback } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport { WebKitGestureEvent } from 'react-use-gesture/dist/types';\nimport { useRootStore } from 'hooks/useRootStore';\nimport { useDiagramDragHandlers } from 'hooks/userInteractions/useDiagramDragHandlers';\nimport { useDiagramPinchHandlers } from 'hooks/userInteractions/useDiagramPinchHandlers';\nimport { useDiagramWheelHandler } from 'hooks/userInteractions/useDiagramWheelHandler';\n\nexport const useDiagramUserInteraction = () => {\n  const { diagramState } = useRootStore();\n\n  const cancelGesture = useCallback(\n    (\n      event:\n        | TouchEvent\n        | React.TouchEvent<Element>\n        | React.WheelEvent<Element>\n        | WheelEvent\n        | WebKitGestureEvent\n        | React.PointerEvent<Element>\n        | PointerEvent\n    ) => event.target !== diagramState.diagramInnerRef.current,\n    [diagramState.diagramInnerRef]\n  );\n\n  const dragHandlers = useDiagramDragHandlers(cancelGesture);\n  const pinchHandlers = useDiagramPinchHandlers(cancelGesture);\n  const wheelHandler = useDiagramWheelHandler(diagramState);\n\n  useGesture(\n    {\n      ...dragHandlers,\n      ...pinchHandlers,\n      ...wheelHandler,\n    },\n    {\n      domTarget: diagramState.diagramInnerRef,\n      eventOptions: { passive: false },\n    }\n  );\n};\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { useRootStore } from 'hooks/useRootStore';\n\nexport const MiniControlWrapper = observer(() => {\n  const rootStore = useRootStore();\n  const minicontrolComponentState = rootStore.diagramSettings.miniControlComponentState;\n  return (\n    minicontrolComponentState.component && (\n      <minicontrolComponentState.component\n        rootStore={rootStore}\n        settings={minicontrolComponentState.settings}\n      />\n    )\n  );\n});\n","import { arePointsEqual, Point } from 'utils/point';\n\nexport const generateTransform = (translate: Point, scale?: number): string => {\n  const translatePart = `translate(${translate[0]}px, ${translate[1]}px)`;\n  if (scale) {\n    const scalePart = `scale(${scale})`;\n    return translatePart + ' ' + scalePart;\n  } else {\n    return translatePart;\n  }\n};\n\nexport interface ITransformation {\n  zoom: number;\n  offset: Point;\n}\n\nexport const areTranformationsEqual = (\n  a: ITransformation,\n  b: ITransformation\n): boolean =>\n  a === b ||\n  (a && b && a.zoom === b.zoom && arePointsEqual(a.offset, b.offset));\n","import React, { useEffect } from 'react';\nimport { LinksLayer } from 'components/LinksLayer';\nimport { NodesLayer } from 'components/NodesLayer';\nimport { useDiagramUserInteraction } from 'hooks/userInteractions/useDiagramUserInteraction';\nimport { observer } from 'mobx-react-lite';\nimport { useRootStore } from 'hooks/useRootStore';\nimport { BackgroundWrapper } from 'components/BackgroundWrapper';\nimport { MiniControlWrapper } from 'components/MiniControlWrapper';\nimport { generateTransform } from 'utils/transformation';\n\nexport interface IDiagramInnerProps {\n  diagramStyles?: React.CSSProperties;\n}\n\nexport const InnerDiagram = observer<IDiagramInnerProps>((props) => {\n  const rootStore = useRootStore();\n  useDiagramUserInteraction();\n\n  const offset = rootStore.diagramState.offset;\n  const zoom = rootStore.diagramState.zoom;\n  // Notify state about already rendered zoom and offset.\n  useEffect(() => {\n    rootStore.diagramState.renderOffsetAndZoom(offset, zoom);\n  }, [offset, zoom]);\n\n  useEffect(() => {\n    const resizeHandler = () =>\n      rootStore.nodesStore.nodes.forEach((n) =>\n        n.recalculatePortsSizeAndPosition()\n      );\n    window.addEventListener('resize', resizeHandler);\n    return () => window.removeEventListener('resize', resizeHandler);\n  }, [rootStore]);\n\n  return (\n    <div\n      ref={rootStore.diagramState.diagramInnerRef}\n      style={{ ...props.diagramStyles }}\n      className='react_fast_diagram_DiagramInner'\n    >\n      <BackgroundWrapper />\n      <div\n        className='react_fast_diagram_DiagramInner_DraggablePart'\n        style={{\n          transform: generateTransform(offset, zoom),\n        }}\n      >\n        <LinksLayer linksStore={rootStore.linksStore} />\n        <NodesLayer nodesStore={rootStore.nodesStore} />\n      </div>\n      <MiniControlWrapper />\n    </div>\n  );\n});\n\nInnerDiagram.displayName = 'InnerDiagram';\n","export type ErrorResult<TValue = undefined> = TValue extends undefined\n  ? { success: false; error?: string }\n  : { success: false; error?: string; value: TValue };\n\nexport type SuccessResult<TValue = undefined> = TValue extends undefined\n  ? { success: true }\n  : { success: true; value: TValue };\n\nexport type SuccessOrErrorResult<TValue = undefined, TErrorValue = undefined> =\n  | SuccessResult<TValue>\n  | ErrorResult<TErrorValue>;\n\nexport function isSuccess<TValue, TErrorValue>(\n  result: SuccessOrErrorResult<TValue, TErrorValue>\n): result is SuccessResult<TValue> {\n  return result.success;\n}\n\nexport function isError<TValue, TErrorValue>(\n  result: SuccessOrErrorResult<TValue, TErrorValue>\n): result is ErrorResult<TErrorValue> {\n  return !result.success;\n}\n\nexport function successResult(): SuccessResult {\n  return { success: true };\n}\n\nexport function successValueResult<TValue>(\n  value: TValue\n): SuccessResult<TValue> {\n  return { success: true, value } as SuccessResult<TValue>;\n}\n\nexport function errorResult(error?: string): ErrorResult {\n  return { success: false, error };\n}\n\nexport function errorValueResult<TErrorValue>(\n  value: TErrorValue,\n  error?: string\n): ErrorResult<TErrorValue> {\n  return { success: false, error, value } as ErrorResult<TErrorValue>;\n}\n","import { PortState } from 'states/portState';\nimport { RootStore } from 'states/rootStore';\nimport { INodeState, NodeState } from 'states/nodeState';\nimport {\n  ErrorResult,\n  isError,\n  isSuccess,\n  SuccessOrErrorResult,\n} from 'utils/result';\nimport { Point } from 'utils/point';\n\nexport class Callbacks {\n  private _validateLinkEndpoints?: ICallbacks['validateLinkEndpoints'];\n  private _nodesAdded?: ICallbacks['nodesAdded'];\n  private _nodePositionChanged?: ICallbacks['nodePositionChanged'];\n  private _dragStateChanged?: ICallbacks['dragStateChanged'];\n\n  private _rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this._rootStore = rootStore;\n    this.import();\n  }\n\n  import = (callbacks?: ICallbacks) => {\n    this._validateLinkEndpoints = callbacks?.validateLinkEndpoints;\n    this._nodesAdded = callbacks?.nodesAdded;\n    this._nodePositionChanged = callbacks?.nodePositionChanged;\n    this._dragStateChanged = callbacks?.dragStateChanged;\n  };\n\n  export = () : ICallbacks => ({\n    validateLinkEndpoints: this._validateLinkEndpoints,\n    nodesAdded: this._nodesAdded,\n    nodePositionChanged: this._nodePositionChanged,\n    dragStateChanged: this._dragStateChanged,\n  });\n\n  validateLinkEndpoints = (source: PortState, target: PortState) => {\n    if (this._validateLinkEndpoints)\n      return this._validateLinkEndpoints(source, target, this._rootStore);\n    else return true;\n  };\n\n  nodesAdded = (\n    addResults: SuccessOrErrorResult<NodeState, INodeState>[],\n    importing: boolean\n  ) =>\n    this._nodesAdded &&\n    this._nodesAdded(\n      addResults.filter(isSuccess).map((r) => r.value),\n      addResults.filter(isError),\n      importing,\n      this._rootStore\n    );\n\n  nodePositionChanged = (\n    node: NodeState,\n    oldPosition: Point,\n    newPosition: Point,\n    isDragActive: boolean\n  ) =>\n    this._nodePositionChanged &&\n    this._nodePositionChanged(\n      node,\n      oldPosition,\n      newPosition,\n      isDragActive,\n      this._rootStore\n    );\n\n  dragStateChanged = (nodes: NodeState[], started: boolean) =>\n    this._dragStateChanged &&\n    this._dragStateChanged(nodes, started, this._rootStore);\n}\n\nexport interface ICallbacks {\n  validateLinkEndpoints?: (\n    source: PortState,\n    target: PortState,\n    rootStore: RootStore\n  ) => boolean;\n  nodesAdded?: (\n    addedNodes: NodeState[],\n    failedToAdd: ErrorResult<INodeState>[],\n    importing: boolean,\n    rootStore: RootStore\n  ) => void;\n  nodePositionChanged?: (\n    node: NodeState,\n    oldPosition: Point,\n    newPosition: Point,\n    isDragActive: boolean,\n    rootStore: RootStore\n  ) => void;\n  dragStateChanged?: (\n    nodes: NodeState[],\n    started: boolean,\n    rootStore: RootStore\n  ) => void;\n}\n","import { makeAutoObservable } from 'mobx';\nimport {\n  IComponentDefinition,\n  VisualComponent,\n  VisualComponentState,\n} from 'states/visualComponentState';\n\nexport class VisualComponentWithDefault<TComponentProps> {\n  private _innerComponent: VisualComponentState<TComponentProps>;\n  private _defaultComponent: VisualComponentState<TComponentProps>;\n\n  constructor(defaultComponent: IComponentDefinition<TComponentProps>) {\n    this._innerComponent = new VisualComponentState<TComponentProps>(\n      defaultComponent\n    );\n    this._defaultComponent = this._innerComponent;\n    makeAutoObservable(this);\n  }\n\n  get component() {\n    return this._innerComponent.component;\n  }\n\n  get settings() {\n    return this._innerComponent.settings;\n  }\n\n  import = (\n    newComponent?:\n      | IComponentDefinition<TComponentProps>\n      | VisualComponent<TComponentProps>\n  ) => {\n    this._innerComponent = newComponent\n      ? new VisualComponentState<TComponentProps>(newComponent)\n      : this._defaultComponent;\n  };\n}\n","import React from 'react';\n\n// Icons from https://material-ui.com/components/material-icons/\n\nexport const RubbishBinIcon: React.FC = () => (\n  <svg viewBox='0 0 24 24'>\n    <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"></path>\n  </svg>\n);\n\nexport const CopyIcon: React.FC = () => (\n  <svg viewBox='0 0 24 24'>\n    <path d='M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4H8c-1.1 0-1.99.9-1.99 2L6 21c0 1.1.89 2 1.99 2H19c1.1 0 2-.9 2-2V11l-6-6zM8 21V7h6v5h5v9H8z'></path>\n  </svg>\n);\n\nexport const FilterCenterFocusIcon: React.FC = () => (\n  <svg viewBox='0 0 24 24'>\n    <path d=\"M5 15H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zM12 9c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"></path>\n  </svg>\n);","import { cloneSelectedNodesCommand } from 'commands/clone';\nimport { removeSelectedCommand } from 'commands/remove';\nimport {\n  CopyIcon,\n  FilterCenterFocusIcon,\n  RubbishBinIcon,\n} from 'components/Icons';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport type { IMiniControlComponentProps } from 'states/diagramSettings';\nimport { IComponentDefinition } from 'states/visualComponentState';\nimport { CornerPosition } from 'utils/position';\n\nconst MiniControlDefault: React.FC<\n  IMiniControlComponentProps<IMiniControlDefaultSettings>\n> = observer(({ rootStore, settings }) => {\n  settings = settings ?? defaultSettings;\n\n  if (Object.values(settings.buttons).every((v) => v === false)) return null;\n\n  return (\n    <div\n      className='react_fast_diagram_Minicontrol_Default'\n      style={{\n        ...getOffsetStyles(settings),\n        ...settings?.containerStyle,\n      }}\n    >\n      {settings.buttons.deleteSelection &&\n        rootStore.selectionState.selectedItems.length > 0 && (\n          <Button\n            size={settings.buttonsSize}\n            onClick={() =>\n              rootStore.commandExecutor.execute(removeSelectedCommand)\n            }\n          >\n            <RubbishBinIcon />\n          </Button>\n        )}\n      {settings.buttons.cloneSelectedNodes &&\n        rootStore.selectionState.selectedItems.length > 0 && (\n          <Button\n            size={settings.buttonsSize}\n            onClick={() =>\n              rootStore.commandExecutor.execute(cloneSelectedNodesCommand)\n            }\n          >\n            <CopyIcon />\n          </Button>\n        )}\n      {settings.buttons.zoomIn && (\n        <Button\n          size={settings.buttonsSize}\n          onClick={rootStore.diagramState.zoomIn}\n          children='+'\n        />\n      )}\n      {settings.buttons.zoomOut && (\n        <Button\n          size={settings.buttonsSize}\n          onClick={rootStore.diagramState.zoomOut}\n          children='-'\n        />\n      )}\n      {settings.buttons.zoomToFit && (\n        <Button\n          size={settings.buttonsSize}\n          onClick={rootStore.diagramState.zoomToFit}\n        >\n          <FilterCenterFocusIcon />\n        </Button>\n      )}\n    </div>\n  );\n});\n\nfunction getOffsetStyles(settings: IMiniControlDefaultSettings) {\n  return {\n    top:\n      settings.position == 'left-top' || settings.position == 'right-top'\n        ? settings.parentOffset\n        : undefined,\n    right:\n      settings.position == 'right-bottom' || settings.position == 'right-top'\n        ? settings.parentOffset\n        : undefined,\n    bottom:\n      settings.position == 'left-bottom' || settings.position == 'right-bottom'\n        ? settings.parentOffset\n        : undefined,\n    left:\n      settings.position == 'left-top' || settings.position == 'left-bottom'\n        ? settings.parentOffset\n        : undefined,\n  };\n}\n\nexport const Button: React.FC<{\n  size: number;\n  onClick: () => any;\n}> = (props) => (\n  <button\n    onClick={props.onClick}\n    className='react_fast_diagram_Minicontrol_Default_Btn'\n    style={{\n      width: props.size + 'px',\n      height: props.size + 'px',\n      padding: 5,\n    }}\n  >\n    {props.children}\n  </button>\n);\n\nexport const createDefaultMiniControl = (\n  settings?: Partial<IMiniControlDefaultSettings>\n): IComponentDefinition<\n  IMiniControlComponentProps,\n  IMiniControlDefaultSettings\n> => {\n  const finalSettings = {\n    ...defaultSettings,\n    ...(settings ? settings : {}),\n  };\n\n  return {\n    component: MiniControlDefault,\n    settings: finalSettings,\n  };\n};\n\nconst defaultSettings: IMiniControlDefaultSettings = {\n  position: 'left-bottom',\n  containerStyle: {},\n  buttonsSize: 30,\n  buttons: {\n    zoomIn: true,\n    zoomOut: true,\n    deleteSelection: true,\n    cloneSelectedNodes: true,\n    zoomToFit: true,\n  },\n  parentOffset: 20,\n};\n\nexport interface IMiniControlDefaultSettings {\n  position: CornerPosition;\n  containerStyle: React.CSSProperties;\n  buttons: ButtonsValue;\n  buttonsSize: number;\n  parentOffset: number;\n}\n\ninterface ButtonsValue {\n  zoomIn?: boolean;\n  zoomOut?: boolean;\n  deleteSelection?: boolean;\n  cloneSelectedNodes?: boolean;\n  zoomToFit?: boolean;\n}\n","import { makeAutoObservable } from 'mobx';\nimport { isObject } from 'utils/common';\n\nexport class UserInteractionSettings {\n  private _diagramZoom: boolean;\n  private _diagramPan: boolean;\n  private _nodeDrag: boolean;\n  private _portConnection: boolean;\n  private _nodeSelection: boolean;\n  private _linkSelection: boolean;\n\n  constructor() {\n    this.import();\n    makeAutoObservable(this);\n  }\n\n  import = (obj?: Partial<IUserInteraction> | boolean) => {\n    if (obj === true || obj === undefined || obj === null) this.setAll(true);\n    else if (obj === false) this.setAll(false);\n    else if (isObject(obj)) {\n      this._diagramZoom = obj.diagramZoom ?? true;\n      this._diagramPan = obj.diagramPan ?? true;\n      this._nodeDrag = obj.nodeDrag ?? true;\n      this._portConnection = obj.portConnection ?? true;\n      this._nodeSelection = obj.nodeSelection ?? true;\n      this._linkSelection = obj.linkSelection ?? true;\n    }\n  };\n\n  setAll = (value: boolean) => {\n    this._diagramZoom = value;\n    this._diagramPan = value;\n    this._nodeDrag = value;\n    this._portConnection = value;\n    this._nodeSelection = value;\n    this._linkSelection = value;\n  };\n\n  get diagramZoom() {\n    return this._diagramZoom;\n  }\n\n  set diagramZoom(value: boolean) {\n    this._diagramZoom = value;\n  }\n\n  get diagramPan() {\n    return this._diagramPan;\n  }\n\n  set diagramPan(value: boolean) {\n    this._diagramPan = value;\n  }\n\n  get nodeDrag() {\n    return this._nodeDrag;\n  }\n\n  set nodeDrag(value: boolean) {\n    this._nodeDrag = value;\n  }\n\n  get portConnection() {\n    return this._portConnection;\n  }\n\n  set portConnection(value: boolean) {\n    this._portConnection = value;\n  }\n\n  get nodeSelection() {\n    return this._nodeSelection;\n  }\n\n  set nodeSelection(value: boolean) {\n    this._nodeSelection = value;\n  }\n\n  get linkSelection() {\n    return this._linkSelection;\n  }\n\n  set linkSelection(value: boolean) {\n    this._linkSelection = value;\n  }\n}\n\nexport interface IUserInteraction {\n  diagramZoom: boolean;\n  diagramPan: boolean;\n  nodeDrag: boolean;\n  portConnection: boolean;\n  nodeSelection: boolean;\n  linkSelection: boolean;\n}\n","import { makeAutoObservable } from 'mobx';\nimport { Point } from 'utils/point';\nimport { createDefaultBackground } from 'components/BackgroundDefault';\nimport { VisualComponentWithDefault } from 'states/visualComponentWithDefault';\nimport { RootStore } from 'states/rootStore';\nimport { createDefaultMiniControl } from 'components/MiniControlDefault';\nimport {\n  IComponentDefinition,\n  VisualComponent,\n} from 'states/visualComponentState';\nimport { IUserInteraction, UserInteractionSettings } from 'states/userInteractionSettings';\n\nexport class DiagramSettings {\n  private _backgroundComponentState: VisualComponentWithDefault<IBackgroundComponentProps>;\n  private _miniControlComponentState: VisualComponentWithDefault<IMiniControlComponentProps>;\n  private _zoomInterval: Point = defaultZoomInterval;\n  private _zoomToFitSettings: IZoomToFitSettings = defaultZoomToFitSettings;\n  private _userInteraction: UserInteractionSettings;\n\n  constructor() {\n    this._backgroundComponentState = new VisualComponentWithDefault<IBackgroundComponentProps>(\n      createDefaultBackground()\n    );\n    this._miniControlComponentState = new VisualComponentWithDefault<IMiniControlComponentProps>(\n      createDefaultMiniControl()\n    );\n    this._userInteraction = new UserInteractionSettings();\n    makeAutoObservable(this);\n  }\n\n  import = (obj?: IDiagramSettings) => {\n    this._backgroundComponentState.import(obj?.backgroundComponent);\n    this._miniControlComponentState.import(obj?.miniControlComponent);\n    this.setZoomInterval(obj?.zoomInterval);\n    this._zoomToFitSettings = {\n      ...defaultZoomToFitSettings,\n      ...obj?.zoomToFitSettings,\n    };\n    this._userInteraction.import(obj?.userInteraction);\n  };\n\n  get backgroundComponentState() {\n    return this._backgroundComponentState;\n  }\n\n  get miniControlComponentState() {\n    return this._miniControlComponentState;\n  }\n\n  get zoomInterval() {\n    return this._zoomInterval;\n  }\n\n  get zoomToFitSettings() {\n    return this._zoomToFitSettings;\n  }\n\n  setZoomInterval = (value: Point | null | undefined) => {\n    this._zoomInterval = value ?? defaultZoomInterval;\n  };\n\n  get userInteraction() {\n    return this._userInteraction;\n  }\n}\n\nconst defaultZoomInterval: Point = [0.1, 3];\nconst defaultZoomToFitSettings: IZoomToFitSettings = {\n  padding: [30, 30],\n};\n\nexport interface IDiagramSettings {\n  backgroundComponent?:\n    | IComponentDefinition<IBackgroundComponentProps>\n    | VisualComponent<IBackgroundComponentProps>;\n  miniControlComponent?:\n    | IComponentDefinition<IMiniControlComponentProps>\n    | VisualComponent<IMiniControlComponentProps>;\n  zoomInterval?: Point;\n  zoomToFitSettings?: IZoomToFitSettings;\n  userInteraction?: Partial<IUserInteraction> | boolean;\n}\n\nexport interface IBackgroundComponentProps<TSettings = any> {\n  diagramOffset: Point;\n  diagramZoom: number;\n  settings?: TSettings;\n}\n\nexport interface IMiniControlComponentProps<TSettings = any> {\n  rootStore: RootStore;\n  settings?: TSettings;\n}\n\nexport interface IZoomToFitSettings {\n  padding: Point;\n}\n","import { makeAutoObservable } from 'mobx';\nimport { Point } from 'utils/point';\n\nexport class HtmlElementRefState {\n  private _currentInternal: HTMLDivElement | null;\n  private _triggerSizePositionRecalculation: number = 0;\n\n  constructor(initValue: HTMLDivElement | null) {\n    this._currentInternal = initValue;\n    makeAutoObservable(this);\n  }\n\n  get current() {\n    return this._currentInternal;\n  }\n\n  set current(value: HTMLDivElement | null) {\n    this._currentInternal = value;\n  }\n\n  offsetRelativeToParent = (parent: HTMLElement, zoom: number): Point | null => {\n    this._triggerSizePositionRecalculation | 1; // to make offsetRelativeToParent dependend on _triggerSizePositionRecalculation\n    const curr = this.current as HTMLElement;\n    if (!curr) return null;\n    const boundingRect = curr.getBoundingClientRect();\n    const parentBoundingRect = parent.getBoundingClientRect();\n    return [(boundingRect.x - parentBoundingRect.x) / zoom, (boundingRect.y - parentBoundingRect.y) / zoom];\n  };\n\n  /**\n   * @returns Value is calculated without zoom taking into account, that is, the same as zoom would be '1'.\n   * Value can be @type {null} in case reference to real DOM object is not set.\n   */\n  get realSize(): Point | null {\n    this._triggerSizePositionRecalculation | 1; // to make realSize dependend on _triggerSizePositionRecalculation\n    if (this.current) {\n      return [this.current.clientWidth, this.current.clientHeight];\n    } else {\n      return null;\n    }\n  }\n\n  recalculateSizeAndPosition = () => {\n    this._triggerSizePositionRecalculation += 1; \n  }\n}\n\nexport interface IHtmlElementRect {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n}\n","import { makeAutoObservable } from 'mobx';\nimport {\n  IUserInteractionTranslate,\n  IUserInteractionTranslateAndZoom,\n} from 'hooks/userInteractions/common';\nimport { HtmlElementRefState } from 'states/htmlElementRefState';\nimport { RootStore } from 'states/rootStore';\nimport { BoundingBox } from 'utils/common';\nimport { clampValue, deepCopy } from 'utils';\nimport { addPoints, multiplyPoint, Point, subtractPoints } from 'utils/point';\n\nexport class DiagramState\n  implements IUserInteractionTranslate, IUserInteractionTranslateAndZoom {\n  private _offset: Point;\n  private _zoom: number;\n  private _renderedOffset: Point;\n  private _renderedZoom: number;\n  private _diagramInnerRef: HtmlElementRefState;\n  private _rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this._diagramInnerRef = new HtmlElementRefState(null);\n    this._rootStore = rootStore;\n    this._renderedOffset = [0, 0];\n    this._renderedZoom = 1;\n    this.import();\n\n    makeAutoObservable(this, {\n      // @ts-ignore\n      _rootStore: false,\n    });\n  }\n\n  import = (state?: IDiagramState) => {\n    this.setOffset(state?.offset);\n    this.setZoom(state?.zoom);\n  };\n\n  export = (): IDiagramState =>\n    deepCopy({\n      offset: this._offset,\n      zoom: this._zoom,\n    });\n\n  setOffset = (newOffset: Point | null | undefined) => {\n    this._offset = newOffset ?? [0, 0];\n  };\n\n  setZoom = (newZoom: number | null | undefined) => {\n    this._zoom = clampValue(\n      newZoom ?? 1,\n      this._rootStore.diagramSettings.zoomInterval\n    );\n  };\n\n  zoomIn = () => this.zoomIntoCenter(1 / 0.8);\n  zoomOut = () => this.zoomIntoCenter(0.8);\n\n  // See: https://stackoverflow.com/a/30039971/9142642\n  zoomInto = (pointToZoomInto: Point, zoomMultiplicator: number) => {\n    const newZoom = clampValue(\n      this._zoom * zoomMultiplicator,\n      this._rootStore.diagramSettings.zoomInterval\n    );\n\n    const pointDisplacementAfterZoom = multiplyPoint(\n      subtractPoints(pointToZoomInto, this._offset),\n      newZoom / this._zoom\n    );\n\n    this.setTransformation(\n      // Compensate for the displacement by moving the point back under the cursor\n      subtractPoints(pointToZoomInto, pointDisplacementAfterZoom),\n      newZoom\n    );\n  };\n\n  setTransformation = (newOffset: Point, newZoom: number) => {\n    this.setOffset(newOffset);\n    this.setZoom(newZoom);\n  };\n\n  translate = (translateBy: Point) => {\n    this.setOffset(addPoints(this._offset, translateBy));\n  };\n\n  tranlsateAndZoomInto = (\n    translateBy: Point,\n    pointToZoomInto: Point,\n    zoomMultiplicator: number\n  ) => {\n    this.translate(translateBy);\n    this.zoomInto(pointToZoomInto, zoomMultiplicator);\n  };\n\n  zoomIntoCenter = (zoomMultiplicator: number) => {\n    const diagramRealSize = this._diagramInnerRef.realSize;\n    if (!diagramRealSize) return;\n\n    this.zoomInto(multiplyPoint(diagramRealSize, 0.5), zoomMultiplicator);\n  };\n\n  get diagramInnerRef() {\n    return this._diagramInnerRef;\n  }\n\n  get offset() {\n    return this._offset;\n  }\n\n  get zoom() {\n    return this._zoom;\n  }\n\n  get renderedOffset() {\n    return this._renderedOffset;\n  }\n\n  get renderedZoom() {\n    return this._renderedZoom;\n  }\n\n  /**\n   * Set offset and zoom values that were already rendered.\n   */\n  renderOffsetAndZoom = (offset: Point, zoom: number) => {\n    this._renderedOffset = offset;\n    this._renderedZoom = zoom;\n  };\n\n  zoomToFit = () => {\n    const nodesBoundingBox = this._getNodesBoundingBoxWithPadding();\n\n    const diagramSize = this._diagramInnerRef.realSize;\n    if (!diagramSize) {\n      console.warn('Cannot retrieve diagram size');\n      return;\n    }\n\n    const newZoom = calculateNewZoomToFitBoundingBox(\n      diagramSize,\n      nodesBoundingBox\n    );\n\n    // Extend interval to be able to set required zoom\n    this._rootStore.diagramSettings.setZoomInterval([\n      Math.min(this._rootStore.diagramSettings.zoomInterval[0], newZoom),\n      Math.max(this._rootStore.diagramSettings.zoomInterval[1], newZoom),\n    ]);\n    this.setZoom(newZoom);\n\n    this.setOffset(\n      calculateOffsetToCenterBoundingBox(diagramSize, newZoom, nodesBoundingBox)\n    );\n  };\n\n  private _getNodesBoundingBoxWithPadding = (): BoundingBox => {\n    const nodesBoundingBox = this._rootStore.nodesStore.getNodesBoundingBox();\n    const padding = this._rootStore.diagramSettings.zoomToFitSettings.padding;\n    nodesBoundingBox.topLeftCorner = subtractPoints(\n      nodesBoundingBox.topLeftCorner,\n      padding\n    );\n    nodesBoundingBox.bottomRightCorner = addPoints(\n      nodesBoundingBox.bottomRightCorner,\n      padding\n    );\n    nodesBoundingBox.size = subtractPoints(\n      nodesBoundingBox.bottomRightCorner,\n      nodesBoundingBox.topLeftCorner\n    );\n\n    return nodesBoundingBox;\n  };\n}\n\nfunction calculateNewZoomToFitBoundingBox(\n  diagramSize: Point,\n  boundingBox: BoundingBox\n) {\n  // Zoom to fit the largest size, horizontal or vertical\n  const newZoom = Math.min(\n    diagramSize[0] / boundingBox.size[0],\n    diagramSize[1] / boundingBox.size[1]\n  );\n\n  return newZoom;\n}\n\nfunction calculateOffsetToCenterBoundingBox(\n  diagramSize: Point,\n  zoom: number,\n  boundingBox: BoundingBox\n) {\n  // Take zoom into account\n  const contentSizeWithZoom = multiplyPoint(boundingBox.size, zoom);\n  const topLeftCornerWithZoom = multiplyPoint(boundingBox.topLeftCorner, zoom);\n  const diffBetweenDiagramAndContentSizes = subtractPoints(\n    diagramSize,\n    contentSizeWithZoom\n  );\n  return addPoints(\n    multiplyPoint(topLeftCornerWithZoom, -1), // topLeft corner of content will be at topleft corner of diagram\n    multiplyPoint(diffBetweenDiagramAndContentSizes, 1 / 2) // center content\n  );\n}\n\nexport interface IDiagramState {\n  offset: Point;\n  zoom: number;\n}\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { LinkCreationState } from 'states/linkCreationState';\nimport type { ILinkVisualComponentProps } from 'states/linksSettings';\nimport type { IComponentDefinition } from 'states/visualComponentState';\n\nexport const LinkDefault: React.FC<\n  ILinkVisualComponentProps<Partial<ILinkDefaultSettings>>\n> = observer(({ entity, settings, bind }) => {\n  const finalSettings = {\n    ...linkDefaultSettings,\n    ...settings,\n  };\n  const path = entity.path;\n  if (!path) return null;\n\n  let color = finalSettings.color;\n  if (entity.selected && finalSettings.selectedColor)\n    color = finalSettings.selectedColor;\n  else if (entity.hovered && finalSettings.hoveredColor)\n    color = finalSettings.hoveredColor;\n\n  return (\n    <g>\n      <path\n        d={path.svgPath}\n        stroke={color}\n        strokeWidth={finalSettings.strokeWidth}\n        fill='none'\n        strokeLinecap='round'\n        markerStart={getMarkerBasedOnState(\n          finalSettings.markerStart,\n          entity.selected,\n          entity.hovered\n        )}\n        markerEnd={getMarkerBasedOnState(\n          finalSettings.markerEnd,\n          entity.selected,\n          entity.hovered\n        )}\n      />\n      <path\n        d={path.svgPath}\n        stroke={color}\n        strokeWidth='5'\n        {...bind()}\n        pointerEvents='auto'\n        fill='none'\n        strokeOpacity={entity.hovered && finalSettings.enableHoverEffect ? 0.22 : 0}\n      />\n    </g>\n  );\n});\n\nfunction getMarkerBasedOnState(\n  marker: ILinkSvgMarker | undefined,\n  selected: boolean,\n  hovered: boolean\n): string | undefined {\n  if (!marker) return undefined;\n\n  let id = undefined;\n  if (typeof marker === 'string') {\n    id = marker;\n  } else {\n    id = marker.default;\n    if (selected && marker.selected) id = marker.selected;\n    else if (hovered && marker.hovered) id = marker.hovered;\n  }\n  return `url(#${id})`;\n}\n\nexport interface ILinkDefaultSettings {\n  color: string;\n  selectedColor?: string;\n  hoveredColor?: string;\n  enableHoverEffect: boolean;\n  strokeWidth: number;\n  cirleRadius: number;\n  markerStart?: ILinkSvgMarker;\n  markerEnd?: ILinkSvgMarker;\n}\n\ntype ILinkSvgMarker =\n  | {\n      default: string;\n      hovered?: string;\n      selected?: string;\n    }\n  | string;\n\nconst linkDefaultSettings: ILinkDefaultSettings = {\n  color: '#c2c2c2',\n  selectedColor: '#6eb7ff',\n  hoveredColor: '#a1d0ff',\n  strokeWidth: 1,\n  cirleRadius: 3,\n  enableHoverEffect: true\n};\n\nexport function createLinkDefault(\n  settings?: Partial<ILinkDefaultSettings>\n): IComponentDefinition<\n  ILinkVisualComponentProps,\n  Partial<ILinkDefaultSettings>\n> {\n  return {\n    component: LinkDefault,\n    settings: settings,\n  };\n}\n","import { Point } from 'utils/point';\nimport { DirectionWithDiagonals } from 'utils/position';\n\nexport function getDegree(dir: DirectionWithDiagonals | undefined): number | undefined {\n  switch (dir) {\n    case 'left':\n      return 180;\n    case 'up':\n      return 90;\n    case 'right':\n      return 0;\n    case 'down':\n      return 270;\n    case 'left-up':\n      return 135;\n    case 'right-up':\n      return 45;\n    case 'right-down':\n      return 315;\n    case 'left-down':\n      return 225;\n    default:\n      return undefined;\n  }\n}\n\nexport function getRadian(dir: DirectionWithDiagonals | undefined) : number|undefined {\n  const degree = getDegree(dir);\n  return degree !== undefined ? degree* Math.PI/180 : undefined;\n}\n\nexport function createVector(\n  point1: Point,\n  length: number,\n  angleInRadian: number | undefined\n): Point {\n  return [\n    point1[0] +\n      length * (angleInRadian !== undefined ? Math.cos(angleInRadian) : 0),\n    point1[1] + length * (angleInRadian !== undefined ? -Math.sin(angleInRadian) : 0),\n  ];\n}\n\nexport function commandM(point: Point): string {\n  return 'M ' + coordinateFromPoint(point);\n}\n\nexport function commandC(startPoint: Point, control1: Point, control2: Point, endPoint: Point): string {\n  return (\n    commandM(startPoint) + \n    ' C ' +\n    coordinateFromPoint(control1) +\n    ' ' +\n    coordinateFromPoint(control2) +\n    ' ' +\n    coordinateFromPoint(endPoint)\n  );\n}\n\nexport function coordinateFromPoint(point: Point) {\n  return `${point[0]} ${point[1]}`;\n}\n","import {\n  ILinkPathConstructor,\n  ILinkPathConstructorEndpointInfo,\n} from '../states/linksSettings';\nimport { DirectionWithDiagonals } from 'utils/position';\nimport { distanceBetweenPoints, roundPoint } from 'utils/point';\nimport { Point } from 'utils/point';\nimport { commandC, createVector, getRadian } from 'linkConstructors/utils';\n\nfunction curvedLinkPathConstructor(\n  source: ILinkPathConstructorEndpointInfo,\n  target: ILinkPathConstructorEndpointInfo,\n  settings: ICurvedLinkPathConstructorSettings\n): string {\n  if (!source || !target) return '';\n\n  const directionFactor = settings.tweakDirectionFactorBasedOnDistance(\n    distanceBetweenPoints(source.point, target.point),\n    settings.directionFactor\n  );\n\n  return commandC(\n    source.point,\n    createVector(source.point, directionFactor, getRadian(source.direction)),\n    createVector(target.point, directionFactor, getRadian(target.direction)),\n    target.point\n  );\n}\n\nexport interface ICurvedLinkPathConstructorSettings {\n  directionFactor: number;\n  tweakDirectionFactorBasedOnDistance: (\n    distance: number,\n    directionFactor: number\n  ) => number;\n}\n\nconst defualtSettings: ICurvedLinkPathConstructorSettings = {\n  directionFactor: 60,\n  tweakDirectionFactorBasedOnDistance: (distance, directionFactor) => {\n    if (distance < 100) {\n      return directionFactor * (distance / 100);\n    }\n    return directionFactor;\n  },\n};\n\nexport function createCurvedLinkPathConstructor(\n  settings?: Partial<ICurvedLinkPathConstructorSettings>\n): ILinkPathConstructor {\n  return (\n    source: ILinkPathConstructorEndpointInfo,\n    target: ILinkPathConstructorEndpointInfo\n  ) =>\n    curvedLinkPathConstructor(\n      source,\n      target,\n      settings ? { ...defualtSettings, ...settings } : defualtSettings\n    );\n}","import { makeAutoObservable } from 'mobx';\nimport { Point } from 'utils/point';\nimport { subtractPoints, multiplyPoint, addPoints } from 'utils/point';\nimport { LinkPointEndpointState } from 'states/linkPointEndpointState';\nimport { LinkPortEndpointState } from 'states/linkPortEndpointState';\nimport {\n  ILinkInteractionState,\n  ILinkPath,\n  createLinkPath,\n} from 'states/linkState';\nimport { PortState } from 'states/portState';\nimport { RootStore } from 'states/rootStore';\n\nexport class LinkCreationState implements ILinkInteractionState {\n  private _source: LinkPortEndpointState | null = null;\n  private _target: LinkPointEndpointState | null = null;\n  private _targetPortCandidate: PortState | null = null;\n\n  private _rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    makeAutoObservable(this);\n    this._rootStore = rootStore;\n  }\n\n  get selected() {\n    return true;\n  }\n\n  get hovered() {\n    return true;\n  }\n\n  get source() {\n    return this._source;\n  }\n\n  get target() {\n    return this._target;\n  }\n\n  get targetPortCandidate() {\n    return this._targetPortCandidate;\n  }\n\n  get isLinking() {\n    return !!this._source;\n  }\n\n  startLinking = (portState: PortState, pointOnPort: Point): boolean => {\n    this._resetProps();\n    this._source = new LinkPortEndpointState(\n      portState.nodeId,\n      portState.id,\n      this._rootStore\n    );\n\n    const sourcePoint = this._source.point;\n    const portSize = this._source.port!.realSize;\n    if (sourcePoint && portSize) {\n      // endpoint point is calculated for center of port\n      const topLeftCornerPoint = subtractPoints(\n        sourcePoint,\n        multiplyPoint(portSize, 0.5)\n      );\n      this._target = new LinkPointEndpointState(\n        addPoints(\n          topLeftCornerPoint,\n          multiplyPoint(pointOnPort, 1 / this._rootStore.diagramState.zoom)\n        )\n      );\n    } else {\n      this._resetProps();\n      return false;\n    }\n\n    return true;\n  };\n\n  setTargetPortCandidate = (portState: PortState) => {\n    if (!this._source) return;\n\n    const canAddLink = this._rootStore.linksStore.validateLink({\n      source: {\n        nodeId: this._source.nodeId,\n        portId: this._source.portId,\n      },\n      target: {\n        nodeId: portState.nodeId,\n        portId: portState.id,\n      },\n    });\n\n    this._targetPortCandidate = portState;\n    if (canAddLink.success) {\n      portState.validForConnection = true;\n    } else {\n      portState.validForConnection = false;\n    }\n  };\n\n  resetTargetPortCandidate = (portState: PortState) => {\n    if (this._targetPortCandidate === portState) {\n      this._targetPortCandidate = null;\n    }\n    portState.validForConnection = true;\n  };\n\n  stopLinking = () => {\n    if (this._targetPortCandidate && this._source) {\n      const result = this._rootStore.linksStore.validateAndAddLink({\n        source: {\n          nodeId: this._source.nodeId,\n          portId: this._source.portId,\n        },\n        target: {\n          nodeId: this._targetPortCandidate.nodeId,\n          portId: this._targetPortCandidate.id,\n        },\n      });\n      if (result.success) {\n        this._rootStore.selectionState.select(result.value, true);\n      }\n    }\n    this._resetProps();\n  };\n\n  get componentDefinition() {\n    const { visualComponents } = this._rootStore.linksSettings;\n    return visualComponents.getComponent(linkCreationComponentType);\n  }\n\n  get path(): ILinkPath | undefined {\n    if (!this._source || !this._target) return undefined;\n    else return createLinkPath(this._rootStore, this._source, this._target);\n  }\n\n  private _resetProps = () => {\n    if (this._source) {\n      if (this._source.port) {\n        this._source.port.validForConnection = true;\n      }\n      this._source = null;\n    }\n    this._target = null;\n    if (this._targetPortCandidate) {\n      this._targetPortCandidate.validForConnection = true;\n      this._targetPortCandidate = null;\n    }\n  };\n}\n\nexport const linkCreationComponentType: string = 'linkCreation';\n","import React, { CSSProperties } from 'react';\n\nexport interface ISvgMarkerSettings {\n  id: string;\n  style?: CSSProperties;\n}\n\nexport interface ISvgCircleMarkerSettings extends ISvgMarkerSettings {\n  radius?: number;\n}\n\nconst CircleMarker = (props: ISvgCircleMarkerSettings) => {\n  const finalSettings: ISvgCircleMarkerSettings = {\n    id: props.id,\n    radius: props.radius ?? 2,\n    style: {\n      stroke: 'none',\n      fill: 'rgb(194, 194, 194)',\n      ...props.style,\n    },\n  };\n  return (\n    <marker\n      id={finalSettings.id}\n      overflow='visible'\n      markerUnits='userSpaceOnUse'\n    >\n      <circle r={finalSettings.radius} style={finalSettings.style} />\n    </marker>\n  );\n};\n\nexport function createCircleMarker(\n  settings: ISvgCircleMarkerSettings\n): React.FunctionComponent {\n  return () => <CircleMarker {...settings} />;\n}\n\nexport interface ISvgArrowMarkerSettings extends ISvgMarkerSettings {\n  height?: number;\n  width?: number;\n}\n\nconst ArrowMarker = (props: ISvgArrowMarkerSettings) => {\n  const finalSettings = {\n    id: props.id,\n    height: props.height ?? 10,\n    width: props.width ?? 10,\n    style: {\n      stroke: 'none',\n      fill: 'rgb(194, 194, 194)',\n      ...props.style,\n    },\n  };\n  return (\n    <marker\n      id={finalSettings.id}\n      overflow='visible'\n      markerUnits='userSpaceOnUse'\n      refX='-0.5'\n      orient='auto'\n    >\n      <path\n        d={`M 0 0 -${finalSettings.width} -${finalSettings.height / 2} -${\n          finalSettings.width\n        } ${finalSettings.height / 2} z`}\n        style={finalSettings.style}\n      />\n    </marker>\n  );\n};\n\nexport function createArrowMarker(\n  settings: ISvgArrowMarkerSettings\n): React.FunctionComponent {\n  return () => <ArrowMarker {...settings} />;\n}","import { ReactEventHandlers } from 'react-use-gesture/dist/types';\nimport { makeAutoObservable } from 'mobx';\nimport { createLinkDefault, LinkDefault } from 'components/LinkDefault';\nimport { createCurvedLinkPathConstructor } from 'linkConstructors/curved';\nimport { Point } from 'utils/point';\nimport { DirectionWithDiagonals } from 'utils/position';\nimport {\n  LinkCreationState,\n  linkCreationComponentType,\n} from 'states/linkCreationState';\nimport { LinkState } from 'states/linkState';\nimport {\n  VisualComponents,\n  componentDefaultType,\n  IVisualComponentsObject,\n} from 'states/visualComponents';\nimport { IVisualComponentProps } from 'states/visualComponentState';\nimport { createArrowMarker, createCircleMarker } from 'components/Markers';\n\nexport class LinksSettings {\n  private _pathConstructor: ILinkPathConstructor;\n  private _visualComponents = new VisualComponents<\n    LinkState | LinkCreationState,\n    ILinkVisualComponentProps\n  >({\n    [componentDefaultType]: createLinkDefault(),\n    [linkCreationComponentType]: createLinkDefault({\n      markerEnd: 'default_circle_marker_selected',\n    }),\n  });\n  private _preferLinksDirection: 'horizontal' | 'vertical' | 'both';\n\n  private _defaultSvgMarkers: React.FunctionComponent[] = [\n    createCircleMarker({\n      id: 'default_circle_marker',\n      style: {\n        fill: '#c2c2c2',\n      },\n    }),\n    createCircleMarker({\n      id: 'default_circle_marker_selected',\n      style: {\n        fill: '#6eb7ff',\n      },\n    }),\n    createCircleMarker({\n      id: 'default_circle_marker_hovered',\n      style: {\n        fill: '#a1d0ff',\n      },\n    }),\n    createArrowMarker({\n      id: 'default_arrow_marker',\n      style: {\n        fill: '#c2c2c2',\n      },\n    }),\n    createArrowMarker({\n      id: 'default_arrow_marker_selected',\n      style: {\n        fill: '#6eb7ff',\n      },\n    }),\n    createArrowMarker({\n      id: 'default_arrow_marker_hovered',\n      style: {\n        fill: '#a1d0ff',\n      },\n    }),\n  ];\n  private _svgMarkers: React.FunctionComponent[] = [];\n\n  constructor() {\n    this.import();\n    makeAutoObservable(this);\n  }\n\n  import = (obj?: ILinksSettings) => {\n    this._visualComponents.import(obj);\n    this.setPathConstructor(obj?.pathConstructor);\n    this._preferLinksDirection = obj?.preferLinksDirection ?? 'horizontal';\n    this._svgMarkers = obj?.svgMarkers\n      ? [...obj.svgMarkers, ...this._defaultSvgMarkers]\n      : this._defaultSvgMarkers;\n  };\n\n  get pathConstructor() {\n    return this._pathConstructor;\n  }\n\n  setPathConstructor = (value: ILinkPathConstructor | null | undefined) => {\n    this._pathConstructor = value ?? defaultPathConstructor;\n  };\n\n  get visualComponents() {\n    return this._visualComponents;\n  }\n\n  get preferLinksDirection() {\n    return this._preferLinksDirection;\n  }\n\n  get svgMarkers(): ReadonlyArray<React.FunctionComponent> {\n    return this._svgMarkers;\n  }\n}\n\nconst defaultPathConstructor = createCurvedLinkPathConstructor();\n\nexport interface ILinkVisualComponentProps<TSettings = any>\n  extends IVisualComponentProps<LinkState | LinkCreationState, TSettings> {\n  bind: (...args: any[]) => ReactEventHandlers;\n}\n\nexport interface ILinksSettings\n  extends IVisualComponentsObject<ILinkVisualComponentProps> {\n  pathConstructor?: ILinkPathConstructor;\n  preferLinksDirection?: LinksSettings['preferLinksDirection'];\n  svgMarkers?: React.FunctionComponent[];\n}\n\nexport interface ILinkPathConstructorEndpointInfo {\n  point: Point;\n  portType?: string;\n  direction?: DirectionWithDiagonals;\n}\n\nexport type ILinkPathConstructor = (\n  source: ILinkPathConstructorEndpointInfo,\n  target: ILinkPathConstructorEndpointInfo\n) => string;\n","function guidS4() {\n  return Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1);\n}\n\nexport function guid() {\n  // return id of format 'aaaaaaaa'-'aaaa'-'aaaa'-'aaaa'-'aaaaaaaaaaaa'\n  return (\n    guidS4() +\n    guidS4() +\n    '-' +\n    guidS4() +\n    '-' +\n    guidS4() +\n    '-' +\n    guidS4() +\n    '-' +\n    guidS4() +\n    guidS4() +\n    guidS4()\n  );\n}\n\nexport function guidForcedUniqueness(\n  checkExistence: (id: string) => boolean\n): string {\n  let id = guid();\n  while (checkExistence(id)) {\n    id = guid();\n  }\n\n  return id;\n}","import { makeAutoObservable, reaction } from 'mobx';\nimport { multiplyPoint, Point } from 'utils/point';\nimport { DirectionWithDiagonals } from 'utils/position';\nimport { deepCopy } from 'utils';\nimport { HtmlElementRefState } from 'states/htmlElementRefState';\nimport { LinkState } from 'states/linkState';\nimport { NodeState } from 'states/nodeState';\nimport { IPortVisualComponentProps } from 'states/portsSettings';\nimport { RootStore } from 'states/rootStore';\nimport { componentDefaultType } from 'states/visualComponents';\nimport {\n  VisualComponentState,\n  VisualComponent,\n} from 'states/visualComponentState';\nimport { isBoolean } from 'utils/common';\n\nexport class PortState {\n  private _id: string;\n  private _nodeId: string;\n  private _label: string;\n  private _type: string;\n  private _extra: any;\n  private _component: VisualComponentState<IPortVisualComponentProps> | null;\n  private _linkDirection: DirectionWithDiagonals | null;\n  private _isConnectionEnabled: boolean | null;\n\n  private _ref: HtmlElementRefState = new HtmlElementRefState(null);\n  private _dragging: boolean = false;\n  private _hovered: boolean = false;\n  private _validForConnection: boolean = true;\n  private _sizeAndPositionRecalculationWithDelay: number = 0;\n\n  private _rootStore: RootStore;\n\n  constructor(\n    rootStore: RootStore,\n    id: string,\n    nodeId: string,\n    state?: IPortStateWithoutIds\n  ) {\n    this._id = id;\n    this._nodeId = nodeId;\n    this.import(state);\n\n    makeAutoObservable(this);\n    this._rootStore = rootStore;\n\n    reaction(\n      () => [\n        this._id,\n        this._nodeId,\n        this._label,\n        this._type,\n        this._extra,\n        this._component,\n      ],\n      () => {\n        this.recalculateSizeAndPosition();\n      }\n    );\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get nodeId() {\n    return this._nodeId;\n  }\n\n  get fullId() {\n    return createFullPortId(this.nodeId, this.id);\n  }\n\n  get ref() {\n    return this._ref;\n  }\n\n  get dragging() {\n    return this._dragging;\n  }\n\n  set dragging(value: boolean) {\n    this._dragging = value;\n  }\n\n  get hovered() {\n    return this._hovered;\n  }\n\n  set hovered(value: boolean) {\n    this._hovered = value;\n  }\n\n  get validForConnection() {\n    return this._validForConnection;\n  }\n\n  set validForConnection(value: boolean) {\n    this._validForConnection = value;\n  }\n\n  get label() {\n    return this._label;\n  }\n\n  setLabel = (value: string | null | undefined) => {\n    this._label = value ?? '';\n  };\n\n  get type() {\n    return this._type;\n  }\n\n  setType = (value: string | null | undefined) => {\n    this._type = value ?? componentDefaultType;\n  };\n\n  /**\n   * Update all properties. If some property missing in `state` parameter, the default one will be used.\n   */\n  import = (state?: IPortStateWithoutIds) => {\n    this.setType(state?.type);\n    this.setLabel(state?.label);\n    this.setExtra(state?.extra);\n    this.setComponent(state?.component);\n    this.setLinkDirection(state?.linkDirection);\n    this.setIsConnectionEnabled(state?.isConnectionEnabled);\n  };\n\n  /**\n   * Update only those properties presented in `state` parameter\n   */\n  update = (state?: IPortStateWithoutIds) => {\n    if (!state) return;\n\n    state.type && this.setType(state.type);\n    state.label && this.setLabel(state.label);\n    state.extra && this.setExtra(state.extra);\n    state.component && this.setComponent(state.component);\n    state.linkDirection && this.setLinkDirection(state.linkDirection);\n    state.isConnectionEnabled &&\n      this.setIsConnectionEnabled(state.isConnectionEnabled);\n  };\n\n  export = (): IPortStateWithIds =>\n    deepCopy({\n      id: this._id,\n      nodeId: this._nodeId,\n      label: this._label,\n      type: this._type,\n      linkDirection: this._linkDirection ?? undefined,\n      isConnectionEnabled: this._isConnectionEnabled ?? undefined,\n    });\n\n  get extra() {\n    return this._extra;\n  }\n\n  setExtra = (value: any) => {\n    this._extra = value ?? null;\n  };\n\n  get node(): NodeState {\n    const node = this._rootStore.nodesStore.getNode(this.nodeId);\n    if (node) return node;\n    else throw `Node with id '${this.nodeId}' does not exist`;\n  }\n\n  get offsetRelativeToNode(): Point | null {\n    if (this.node.ref.current) {\n      return this._ref.offsetRelativeToParent(\n        this.node.ref.current,\n        // Zoom property cannot be used here because to calculate offset we use real\n        // html elements that have not been rendered with the new zoom at this time\n        this._rootStore.diagramState.renderedZoom\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * @returns Value is calculated without zoom taking into account, that is, the same as zoom would be '1'.\n   * Value can be @type {null} in case reference to real DOM object is not set.\n   */\n  get realSize(): Point | null {\n    return this._ref.realSize;\n  }\n\n  setComponent = (\n    value?: VisualComponent<IPortVisualComponentProps> | null\n  ) => {\n    if (!value) {\n      this._component = null;\n    } else {\n      this._component = new VisualComponentState<IPortVisualComponentProps>(\n        value\n      );\n    }\n  };\n\n  get componentDefinition() {\n    if (this._component) return this._component;\n    const { portVisualComponents } = this._rootStore.portsSettings;\n    return portVisualComponents.getComponent(this.type);\n  }\n\n  get connectedLinks(): LinkState[] {\n    return this._rootStore.linksStore.getPortLinks(this.nodeId, this.id);\n  }\n\n  get connectedPorts(): PortState[] {\n    return this.connectedLinks\n      .map((v) =>\n        v.source.portId === this._id ? v.target.port : v.source.port\n      )\n      .filter((p) => p) as PortState[]; // cast because typescript cannot deal with undefined check\n  }\n\n  get linkDirection(): DirectionWithDiagonals | undefined {\n    if (this._linkDirection) return this._linkDirection;\n\n    // Try to guess\n    if (!this.offsetRelativeToNode) return undefined;\n\n    const nodeCenter =\n      this.node.realSize && multiplyPoint(this.node.realSize, 0.5);\n    if (!nodeCenter) return undefined;\n\n    if (this._rootStore.linksSettings.preferLinksDirection === 'horizontal') {\n      return this.offsetRelativeToNode[0] < nodeCenter[0] ? 'left' : 'right';\n    } else if (\n      this._rootStore.linksSettings.preferLinksDirection === 'vertical'\n    ) {\n      return this.offsetRelativeToNode[1] < nodeCenter[1] ? 'up' : 'down';\n    }\n  }\n\n  setLinkDirection = (value: DirectionWithDiagonals | undefined) => {\n    this._linkDirection = value ?? null;\n  };\n\n  setLinkDirectionIfNotYet = (direction: DirectionWithDiagonals) => {\n    this._linkDirection = this._linkDirection ?? direction;\n  };\n\n  recalculateSizeAndPosition = () => {\n    this._sizeAndPositionRecalculationWithDelay += 1;\n  };\n\n  recalculateSizeAndPositionWithoutDelay = () => {\n    this._ref.recalculateSizeAndPosition();\n  };\n\n  get sizeAndPositionRecalculationWithDelay() {\n    return this._sizeAndPositionRecalculationWithDelay;\n  }\n\n  get isConnectionEnabled(): boolean {\n    return this._isConnectionEnabled === null\n      ? this._rootStore.diagramSettings.userInteraction.portConnection\n      : this._isConnectionEnabled;\n  }\n\n  setIsConnectionEnabled = (value: boolean | null | undefined) => {\n    this._isConnectionEnabled = isBoolean(value) ? value : null;\n  };\n}\n\nexport interface IPortStateWithoutIds {\n  label?: string;\n  type?: string;\n  extra?: any;\n  component?: VisualComponent<IPortVisualComponentProps>;\n  linkDirection?: DirectionWithDiagonals;\n  isConnectionEnabled?: boolean;\n}\n\nexport interface IPortState extends IPortStateWithoutIds {\n  id: string;\n}\n\nexport interface IPortStateWithIds extends IPortStateWithoutIds {\n  id: string;\n  nodeId: string;\n}\n\nexport function createFullPortId(nodeId: string, portId: string) {\n  return `${nodeId}-${portId}`;\n}\n","import { makeAutoObservable } from 'mobx';\nimport {\n  SuccessOrErrorResult,\n  successValueResult,\n  errorResult,\n  successResult,\n} from 'utils/result';\nimport { guidForcedUniqueness } from 'utils/guid';\nimport { LinkCreationState } from 'states/linkCreationState';\nimport {\n  linkPortEndpointsEquals,\n  ILinkPortEndpoint,\n} from 'states/linkPortEndpointState';\nimport { LinkState, ILinkState } from 'states/linkState';\nimport { createFullPortId, PortState } from 'states/portState';\nimport { RootStore } from 'states/rootStore';\n\nexport class LinksStore {\n  private _links: Map<string, LinkState>;\n  private _nodesLinksCollection: Map<string, LinkState[]>;\n  private _linkCreation: LinkCreationState;\n\n  private _rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this._linkCreation = new LinkCreationState(rootStore);\n    this.import();\n    makeAutoObservable(this);\n    this._rootStore = rootStore;\n  }\n\n  import = (newLinks?: ILinkState[]) => {\n    this._links = new Map();\n    this._nodesLinksCollection = new Map();\n    // do not check existence of link's ports as they could be added after first node rendering\n    newLinks &&\n      newLinks.forEach((link) => {\n        if (this.validateLinkProperties(link)) {\n          this.addLink(link);\n        }\n      });\n  };\n\n  export = (): ILinkState[] =>\n    Array.from(this._links).map(([key, value]) => value.export());\n\n  get links(): ReadonlyMap<string, LinkState> {\n    return this._links;\n  }\n\n  get linkCreation() {\n    return this._linkCreation;\n  }\n\n  getNodeLinks = (nodeId: string): LinkState[] => {\n    return this._nodesLinksCollection.get(nodeId) ?? [];\n  };\n\n  getLink = (id: string): LinkState | undefined => {\n    return this.links.get(id);\n  };\n\n  getPortLinks = (nodeId: string, portId: string): LinkState[] => {\n    const nodeLinks = this.getNodeLinks(nodeId);\n    const fullPortId = createFullPortId(nodeId, portId);\n    return nodeLinks.filter(\n      (l) =>\n        (l.source.port && l.source.port.fullId === fullPortId) ||\n        (l.target.port && l.target.port.fullId === fullPortId)\n    );\n  };\n\n  removeNodeLinks = (nodeId: string) => {\n    const links = this.getNodeLinks(nodeId);\n    links.forEach((l) => this.removeLink(l.id));\n  };\n\n  removePortLinks = (nodeId: string, portId: string) => {\n    if (!nodeId || !portId) return;\n\n    const links = this.getNodeLinks(nodeId);\n    const endpointToRemove = {\n      nodeId,\n      portId,\n    };\n    links.forEach((l) => {\n      if (\n        linkPortEndpointsEquals(l.source, endpointToRemove) ||\n        linkPortEndpointsEquals(l.target, endpointToRemove)\n      ) {\n        this.removeLink(l.id);\n      }\n    });\n  };\n\n  addLink = (link: ILinkState): LinkState => {\n    const newLink = new LinkState(\n      this._rootStore,\n      link.id ?? guidForcedUniqueness((id) => this._links.has(id)),\n      link\n    );\n    this._links.set(newLink.id, newLink);\n    this._addLinkToNodeLinksCollection(newLink, link.source.nodeId);\n    this._addLinkToNodeLinksCollection(newLink, link.target.nodeId);\n\n    return newLink;\n  };\n\n  validateAndAddLink = (link: ILinkState): SuccessOrErrorResult<LinkState> => {\n    const canAdd = this.validateLink(link);\n    if (!canAdd.success) return canAdd;\n\n    const newlyCreatedLink = this.addLink(link);\n\n    return successValueResult(newlyCreatedLink);\n  };\n\n  removeLink = (linkId: string): boolean => {\n    const linkToRemove = this._links.get(linkId);\n    if (linkToRemove) {\n      this._removeLinkFromNodeLinksCollection(\n        linkToRemove,\n        linkToRemove.source.nodeId\n      );\n      this._removeLinkFromNodeLinksCollection(\n        linkToRemove,\n        linkToRemove.target.nodeId\n      );\n\n      this._rootStore.selectionState.unselect(linkToRemove);\n      this._links.delete(linkId);\n      return true;\n    }\n\n    return false;\n  };\n\n  validateLink = (link: ILinkState): SuccessOrErrorResult => {\n    const propsValidationResult = this.validateLinkProperties(link);\n    if (!propsValidationResult.success) return propsValidationResult;\n\n    const sourcePortResult = this.getEndpointPortOrError(link.source);\n    if (!sourcePortResult.success) return sourcePortResult;\n    const targetPortResult = this.getEndpointPortOrError(link.target);\n    if (!targetPortResult.success) return targetPortResult;\n\n    if (this.areEndpointsConnected(link.source, link.target))\n      return errorResult(`Link's endpoints are already connected`);\n\n    if (\n      this._rootStore.callbacks.validateLinkEndpoints?.(\n        sourcePortResult.value,\n        targetPortResult.value\n      ) === false\n    ) {\n      return errorResult(\n        `Link's endpoints are not valid according to validation callback`\n      );\n    }\n\n    return successResult();\n  };\n\n  validateLinkProperties = (link: ILinkState): SuccessOrErrorResult => {\n    if (!link) return errorResult(`Cannot add empty`);\n    if (link.id && typeof link !== 'string')\n      return errorResult(\n        `Cannot add link with id '${link.id}' of type different than 'string'`\n      );\n    if (link.id && this._links.has(link.id))\n      return errorResult(\n        `Cannot add link with id '${link.id}', as it already exists`\n      );\n\n    if (link.source.nodeId === link.target.nodeId)\n      return errorResult(`Link's endpoints are located in the same node`);\n\n    return successResult();\n  };\n\n  getEndpointPortOrError = (\n    endpoint: ILinkPortEndpoint\n  ): SuccessOrErrorResult<PortState> => {\n    const node = this._rootStore.nodesStore.getNode(endpoint.nodeId);\n    if (!node)\n      return errorResult(\n        `Node '${endpoint.nodeId}' of link's endpoint does not exist`\n      );\n    const port = node.getPort(endpoint.portId);\n    if (!port)\n      return errorResult(\n        `Port with id '${endpoint.portId}' does not exist in the node '${endpoint.nodeId}'`\n      );\n\n    return successValueResult(port);\n  };\n\n  getEndpointPort = (endpoint: ILinkPortEndpoint): PortState | undefined => {\n    return this._rootStore.nodesStore\n      .getNode(endpoint.nodeId)\n      ?.getPort(endpoint.portId);\n  };\n\n  areEndpointsConnected = (\n    source: ILinkPortEndpoint,\n    target: ILinkPortEndpoint\n  ): boolean => {\n    return !!this.getLinkForEndpointsIfExists(source, target);\n  };\n\n  getLinkForEndpointsIfExists = (\n    source: ILinkPortEndpoint,\n    target: ILinkPortEndpoint\n  ): LinkState | undefined => {\n    const links = this._nodesLinksCollection.get(source.nodeId);\n    if (links) {\n      return links.find(\n        (l) =>\n          (linkPortEndpointsEquals(l.source, source) &&\n            linkPortEndpointsEquals(l.target, target)) ||\n          (linkPortEndpointsEquals(l.target, source) &&\n            linkPortEndpointsEquals(l.source, target))\n      );\n    }\n  };\n\n  private _addLinkToNodeLinksCollection = (link: LinkState, nodeId: string) => {\n    let links = this._nodesLinksCollection.get(nodeId);\n    if (!links) {\n      this._nodesLinksCollection.set(nodeId, [link]);\n    } else {\n      links.push(link);\n    }\n  };\n\n  private _removeLinkFromNodeLinksCollection = (\n    link: LinkState,\n    nodeId: string\n  ) => {\n    let collection = this._nodesLinksCollection.get(nodeId);\n    if (collection) {\n      collection = collection.filter((l) => l.id !== link.id);\n      if (collection.length > 0) {\n        this._nodesLinksCollection.set(nodeId, collection);\n      } else {\n        this._nodesLinksCollection.delete(nodeId);\n      }\n    }\n  };\n}\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { NodeState } from 'states/nodeState';\n\nexport const NodeLabel: React.FC<{ node: NodeState }> = observer(({ node }) => {\n  return <span>{node.label ? node.label : node.id}</span>;\n});\n","import { useMemo } from 'react';\nimport { useRootStore } from 'hooks/useRootStore';\nimport { PortState } from 'states/portState';\nimport { INodePortState } from 'states/nodeState';\n\ninterface IPortStateWithNodeId extends INodePortState {\n  nodeId: string;\n}\n\nexport function useUpdateOrCreatePortState(\n  port: IPortStateWithNodeId\n): PortState | undefined {\n  const { nodesStore } = useRootStore();\n\n  return useMemo(() => {\n    const node = nodesStore.getNode(port.nodeId);\n    if (!node) return undefined;\n\n    let portState = port.id ? node.getPort(port.id) : undefined;\n    if (portState) {\n      portState.update(port);\n    } else {\n      const result = node.addPort(port);\n      if (result.success) {\n        portState = result.value;\n      }\n    }\n\n    return portState;\n  }, [\n    nodesStore,\n    port?.id,\n    port?.nodeId,\n    port?.component,\n    port?.extra,\n    port?.isConnectionEnabled,\n    port?.label,\n    port?.linkDirection,\n    port?.type,\n  ]);\n}\n","import React, { useMemo } from 'react';\nimport { isNumber } from 'utils/common';\nimport { isPoint, Point } from 'utils/point';\n\nexport const useRelativePositionStyles = (\n  position?: PortPosition,\n  offsetFromParentCenter?: number,\n  offsetFromOrigin?: Point,\n  usePortCenterPivot: boolean = true\n): RelativePositionStyles => {\n  return useMemo(() => {\n    if (!position) return {};\n    \n    const positionStyle: RelativePositionStyles = { position: 'absolute' };\n\n    if (!isNumber(offsetFromParentCenter)) offsetFromParentCenter = 0;\n    if (!isPoint(offsetFromOrigin)) offsetFromOrigin = [0, 0];\n\n    if (position === 'left-top') {\n      positionStyle.left = offsetFromOrigin[0] - offsetFromParentCenter;\n      positionStyle.top = offsetFromOrigin[1];\n      if (usePortCenterPivot) positionStyle.transform = `translateX(-50%)`;\n    } else if (position === 'left-center') {\n      positionStyle.left = offsetFromOrigin[0] - offsetFromParentCenter;\n      positionStyle.top = '50%';\n      positionStyle.transform = `translate(${\n        usePortCenterPivot ? '-50%' : 0\n      }, calc(-50% + ${offsetFromOrigin[1]}px))`;\n    } else if (position === 'left-bottom') {\n      positionStyle.left = offsetFromOrigin[0] - offsetFromParentCenter;\n      positionStyle.bottom = -offsetFromOrigin[1];\n      if (usePortCenterPivot) positionStyle.transform = `translateX(-50%)`;\n    }\n\n    if (position === 'top-left') {\n      positionStyle.left = offsetFromOrigin[0];\n      positionStyle.top = offsetFromOrigin[1] - offsetFromParentCenter;\n      if (usePortCenterPivot) positionStyle.transform = `translateY(-50%)`;\n    } else if (position === 'top-center') {\n      positionStyle.left = '50%';\n      positionStyle.transform = `translate(calc(-50% + ${\n        offsetFromOrigin[0]\n      }px), ${usePortCenterPivot ? '-50%' : 0})`;\n      positionStyle.top = offsetFromOrigin[1] - offsetFromParentCenter;\n    } else if (position === 'top-right') {\n      positionStyle.right = -offsetFromOrigin[0];\n      positionStyle.top = offsetFromOrigin[1] - offsetFromParentCenter;\n      if (usePortCenterPivot) positionStyle.transform = `translateY(-50%)`;\n    }\n\n    if (position === 'right-top') {\n      positionStyle.right = -offsetFromOrigin[0] - offsetFromParentCenter;\n      positionStyle.top = offsetFromOrigin[1];\n      if (usePortCenterPivot) positionStyle.transform = `translateX(50%)`;\n    } else if (position === 'right-center') {\n      positionStyle.right = -offsetFromOrigin[0] - offsetFromParentCenter;\n      positionStyle.top = '50%';\n      positionStyle.transform = `translate(${\n        usePortCenterPivot ? '50%' : 0\n      }, calc(-50% + ${offsetFromOrigin[1]}px))`;\n    } else if (position === 'right-bottom') {\n      positionStyle.right = -offsetFromOrigin[0] - offsetFromParentCenter;\n      positionStyle.bottom = -offsetFromOrigin[1];\n      if (usePortCenterPivot) positionStyle.transform = `translateX(50%)`;\n    }\n\n    if (position === 'bottom-left') {\n      positionStyle.left = offsetFromOrigin[0];\n      positionStyle.bottom = -offsetFromOrigin[1] - offsetFromParentCenter;\n      if (usePortCenterPivot) positionStyle.transform = `translateY(50%)`;\n    } else if (position === 'bottom-center') {\n      positionStyle.left = '50%';\n      positionStyle.transform = `translate(calc(-50% + ${\n        offsetFromOrigin[0]\n      }px), ${usePortCenterPivot ? '50%' : 0})`;\n      positionStyle.bottom = -offsetFromOrigin[1] - offsetFromParentCenter;\n    } else if (position === 'bottom-right') {\n      positionStyle.right = -offsetFromOrigin[0];\n      positionStyle.bottom = -offsetFromOrigin[1] - offsetFromParentCenter;\n      if (usePortCenterPivot) positionStyle.transform = `translateY(50%)`;\n    }\n\n    if (position === 'diagonal-left-top') {\n      positionStyle.left = offsetFromOrigin[0] - offsetFromParentCenter;\n      positionStyle.top = offsetFromOrigin[1] - offsetFromParentCenter;\n      if (usePortCenterPivot) positionStyle.transform = `translate(-50%, -50%)`;\n    } else if (position === 'diagonal-right-top') {\n      positionStyle.right = -offsetFromOrigin[0] - offsetFromParentCenter;\n      positionStyle.top = offsetFromOrigin[1] - offsetFromParentCenter;\n      if (usePortCenterPivot) positionStyle.transform = `translate(50%, -50%)`;\n    } else if (position === 'diagonal-right-bottom') {\n      positionStyle.right = -offsetFromOrigin[0] - offsetFromParentCenter;\n      positionStyle.bottom = -offsetFromOrigin[1] - offsetFromParentCenter;\n      if (usePortCenterPivot) positionStyle.transform = `translate(50%, 50%)`;\n    } else if (position === 'diagonal-left-bottom') {\n      positionStyle.left = offsetFromOrigin[0] - offsetFromParentCenter;\n      positionStyle.bottom = -offsetFromOrigin[1] - offsetFromParentCenter;\n      if (usePortCenterPivot) positionStyle.transform = `translate(-50%, 50%)`;\n    }\n\n    return positionStyle;\n  }, [position, offsetFromParentCenter, offsetFromOrigin, usePortCenterPivot]);\n};\n\ntype RelativePositionStyles = Pick<\n  Partial<React.CSSProperties>,\n  | 'position'\n  | 'left'\n  | 'top'\n  | 'right'\n  | 'bottom'\n  | 'width'\n  | 'height'\n  | 'transform'\n>;\n\nexport const portPositionValues = <const>[\n  'left-top',\n  'left-center',\n  'left-bottom',\n\n  'top-left',\n  'top-center',\n  'top-right',\n\n  'right-top',\n  'right-center',\n  'right-bottom',\n\n  'bottom-left',\n  'bottom-center',\n  'bottom-right',\n\n  'diagonal-left-top',\n  'diagonal-right-top',\n  'diagonal-right-bottom',\n  'diagonal-left-bottom',\n];\nexport type PortPosition = typeof portPositionValues[number];\n","import { useMemo } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport { ReactEventHandlers } from 'react-use-gesture/dist/types';\nimport { PortState } from 'states/portState';\nimport { multiplyPoint, subtractPoints } from 'utils/point';\nimport { useRootStore } from 'hooks/useRootStore';\nimport type { IDragHandlers } from 'hooks/userInteractions/useDiagramDragHandlers';\nimport { useUserAbilityToSelectSwitcher } from 'hooks/userInteractions/useUserAbilityToSelectSwitcher';\nimport { useDiagramCursor } from 'hooks/userInteractions/useCursor';\n\nexport const usePortUserInteraction = (\n  portState?: PortState\n): IUsePortUserInteractionResult => {\n  const {\n    linksStore: { linkCreation },\n    diagramState,\n  } = useRootStore();\n\n  const handlers = useMemo<IGestureHandlers | {}>(\n    () => ({\n      onDrag: ({ delta }) => {\n        if (!portState || !portState.dragging) return;\n        const parentScale = diagramState.zoom;\n        linkCreation.target?.translateBy(multiplyPoint(delta, 1 / parentScale));\n      },\n      onDragStart: ({ event, xy }) => {\n        if (!portState || !portState.isConnectionEnabled) return;\n\n        // Important! Otherwise on touch display onPointerEnter will not work!\n        const portHtmlElement = event.target as Element;\n        portHtmlElement.releasePointerCapture(event.pointerId);\n        const clientRect = portHtmlElement.getBoundingClientRect();\n        let pointOnPort = subtractPoints(xy, [clientRect.x, clientRect.y]);\n\n        if (linkCreation.startLinking(portState, pointOnPort)) {\n          portState.dragging = true;\n        }\n      },\n      onDragEnd: () => {\n        if (!portState) return;\n        portState.dragging = false;\n        linkCreation.stopLinking();\n      },\n      onPointerEnter: () => {\n        if (!portState) return;\n\n        if (portState.isConnectionEnabled) {\n          portState.hovered = true;\n          linkCreation.setTargetPortCandidate(portState);\n        }\n      },\n      onPointerLeave: () => {\n        if (!portState) return;\n        portState.hovered = false;\n        linkCreation.resetTargetPortCandidate(portState);\n      },\n    }),\n    [portState, linkCreation, diagramState]\n  );\n\n  // Temporary bug fix when pointer events handlers are not reasigned.\n  // See https://github.com/pmndrs/react-use-gesture/issues/263 and https://github.com/pmndrs/react-use-gesture/issues/264\n  // There could be some other bugs related to handlers object replacing\n  const bind = useGesture(handlers, {\n    eventOptions: { passive: false },\n  });\n\n  useUserAbilityToSelectSwitcher(\n    !!portState?.dragging,\n    portState?.ref.current?.ownerDocument?.body\n  );\n\n  useDiagramCursor(!!portState?.dragging, 'pointer');\n\n  return {\n    active: !!portState?.dragging,\n    bind,\n  };\n};\n\ninterface IGestureHandlers extends IDragHandlers {\n  onPointerEnter: () => void;\n  onPointerLeave: () => void;\n}\n\nexport interface IUsePortUserInteractionResult {\n  active: boolean;\n  bind: (...args: any[]) => ReactEventHandlers;\n}\n","import React, { useContext, useEffect } from 'react';\nimport { NodeState } from 'states/nodeState';\nimport { observer } from 'mobx-react-lite';\nimport {\n  NodeContext,\n  RenderedPortsComponentsContext,\n} from 'components/NodeWrapper';\nimport { useUpdateOrCreatePortState } from 'hooks/useUpdateOrCreatePortState';\nimport {\n  PortPosition,\n  useRelativePositionStyles,\n} from 'hooks/useRelativePositionStyles';\nimport { Point } from 'utils/point';\nimport { IPortState } from 'states/portState';\nimport { usePortUserInteraction } from 'hooks/userInteractions/usePortUserInteraction';\nimport { disableNodeUserInteractionClassName } from 'hooks/userInteractions/useNodeUserInteraction';\nimport { DirectionWithDiagonals } from 'utils/position';\n\nexport interface IPortProps extends IPortState {\n  position?: PortPosition;\n  offsetFromNodeCenter?: number;\n  offsetFromOrigin?: Point;\n}\n\nexport const Port: React.FC<IPortProps> = observer((props) => {\n  const node = useContext(NodeContext) as NodeState; // node should already exist\n  const portState = useUpdateOrCreatePortState({\n    linkDirection: props.position && positionToLinkDirection[props.position],\n    ...props,\n    nodeId: node.id,\n  });\n\n  const positionStyles = useRelativePositionStyles(\n    props.position,\n    props.offsetFromNodeCenter,\n    props.offsetFromOrigin\n  );\n\n  useRenderingReport(props.id);\n\n  const { bind } = usePortUserInteraction(portState);\n\n  useEffect(() => {\n    portState?.ref.recalculateSizeAndPosition();\n  }, [\n    portState,\n    portState?.ref,\n    portState?.sizeAndPositionRecalculationWithDelay,\n  ]);\n\n  if (!portState) {\n    return null;\n  }\n\n  return (\n    <div\n      style={positionStyles}\n      id={portState.fullId}\n      className={className}\n      ref={portState.ref}\n      key={portState.fullId}\n      {...bind()}\n    >\n      <portState.componentDefinition.component\n        entity={portState}\n        settings={portState.componentDefinition.settings}\n      />\n    </div>\n  );\n});\n\nconst className = `react_fast_diagram_Port ${disableNodeUserInteractionClassName}`;\n\n/**\n * Report to NodeWrapper that port was rendered so it can clean up the old ports\n * @param id - port id\n */\nconst useRenderingReport = (id: string) => {\n  const { render, unrender } = useContext(RenderedPortsComponentsContext);\n  useEffect(() => {\n    render(id);\n    return () => unrender(id);\n  }, [id]);\n};\n\nconst positionToLinkDirection: {\n  [key in PortPosition]: DirectionWithDiagonals;\n} = {\n  'left-center': 'left',\n  'left-bottom': 'left',\n  'left-top': 'left',\n\n  'top-left': 'up',\n  'top-center': 'up',\n  'top-right': 'up',\n\n  'right-center': 'right',\n  'right-bottom': 'right',\n  'right-top': 'right',\n\n  'bottom-left': 'down',\n  'bottom-center': 'down',\n  'bottom-right': 'down',\n\n  'diagonal-left-top': 'left-up',\n  'diagonal-right-top': 'right-up',\n  'diagonal-right-bottom': 'right-down',\n  'diagonal-left-bottom': 'left-down',\n};\n","import React from 'react';\nimport { INodeVisualComponentProps } from '../states/nodesSettings';\nimport { NodeLabel } from './NodeLabel';\nimport { observer } from 'mobx-react-lite';\nimport {\n  IComponentDefinition,\n  VisualComponent,\n} from 'states/visualComponentState';\nimport { NodeState } from 'states/nodeState';\nimport { Optional } from 'utils/common';\nimport { IPortProps, Port } from './Port';\n\nexport const Node: React.FC<\n  INodeVisualComponentProps<INodeSettings>\n> = observer(({ entity, settings, draggableRef }) => {\n  const finalSettings = {\n    ...defaultNodeDefaultSettings,\n    ...settings,\n  };\n  const finalStyles = {\n    ...finalSettings.style,\n    ...(entity.selected ? finalSettings.selectedStyle : undefined),\n  };\n\n  return (\n    <div\n      ref={draggableRef}\n      className='react_fast_diagram_Node_Default'\n      style={finalStyles}\n    >\n      <finalSettings.innerNode node={entity} />\n\n      {Array.isArray(finalSettings.ports) &&\n        finalSettings.ports.map((p) => <Port {...p} key={p.id} />)}\n    </div>\n  );\n});\n\nconst defaultNodeDefaultSettings: INodeFinalSettings = {\n  style: {\n    padding: '10px',\n  },\n  selectedStyle: {\n    border: '#6eb7ff solid 1px',\n  },\n  innerNode: NodeLabel,\n};\n\nexport interface INodeFinalSettings {\n  style?: React.CSSProperties;\n  selectedStyle: React.CSSProperties;\n  ports?: IPortProps[];\n  innerNode: VisualComponent<{ node: NodeState }>;\n  padding?: React.CSSProperties['padding'];\n}\n\nexport function createNode(\n  settings?: INodeSettings\n): IComponentDefinition<\n  INodeVisualComponentProps<INodeSettings>,\n  INodeSettings\n> {\n  return {\n    component: Node,\n    settings: {\n      ...defaultNodeDefaultSettings,\n      ...settings,\n    },\n  };\n}\n\nexport type INodeSettings = Optional<\n  INodeFinalSettings,\n  'innerNode' | 'selectedStyle'\n>;\n\nexport type INodeDefaultSettingsWithoutPorts = Omit<INodeSettings, 'ports'>;\n\nexport const createInputOutputHorizontalNode = (\n  settings?: INodeDefaultSettingsWithoutPorts\n) =>\n  createNode({\n    ...settings,\n    ports: [\n      { id: 'input', type: 'input', position: 'left-center' },\n      { id: 'output', type: 'output', position: 'right-center' },\n    ],\n  });\n\nexport const createInputOutputVerticalNode = (\n  settings?: INodeDefaultSettingsWithoutPorts\n) =>\n  createNode({\n    ...settings,\n    ports: [\n      { id: 'input', type: 'input', position: 'top-center' },\n      { id: 'output', type: 'output', position: 'bottom-center' },\n    ],\n  });\n\nexport const createInputHorizontalNode = (\n  settings?: INodeDefaultSettingsWithoutPorts\n) =>\n  createNode({\n    ...settings,\n    ports: [{ id: 'input', type: 'input', position: 'left-center' }],\n  });\n\nexport const createInputVerticalNode = (\n  settings?: INodeDefaultSettingsWithoutPorts\n) =>\n  createNode({\n    ...settings,\n    ports: [{ id: 'input', type: 'input', position: 'top-center' }],\n  });\n\nexport const createOutputHorizontalNode = (\n  settings?: INodeDefaultSettingsWithoutPorts\n) =>\n  createNode({\n    ...settings,\n    ports: [{ id: 'output', type: 'output', position: 'right-center' }],\n  });\n\nexport const createOutputVerticalNode = (\n  settings?: INodeDefaultSettingsWithoutPorts\n) =>\n  createNode({\n    ...settings,\n    ports: [{ id: 'output', type: 'output', position: 'bottom-center' }],\n  });\n\nexport const createStarNode = (settings?: INodeDefaultSettingsWithoutPorts) =>\n  createNode({\n    ...settings,\n    ports: [\n      { id: 'left', position: 'left-center' },\n      { id: 'top', position: 'top-center' },\n      { id: 'right', position: 'right-center' },\n      { id: 'bottom', position: 'bottom-center' },\n    ],\n  });\n","import {\n  createInputHorizontalNode,\n  createInputOutputHorizontalNode,\n  createInputOutputVerticalNode,\n  createInputVerticalNode,\n  createNode,\n  createOutputHorizontalNode,\n  createOutputVerticalNode,\n  createStarNode,\n} from 'components/Node';\nimport { makeAutoObservable } from 'mobx';\nimport { NodeState } from 'states/nodeState';\nimport {\n  VisualComponents,\n  componentDefaultType,\n  IVisualComponentsObject,\n} from 'states/visualComponents';\nimport { IVisualComponentProps } from 'states/visualComponentState';\nimport { Point } from 'utils/point';\n\nexport class NodesSettings {\n  private _visualComponents: VisualComponents<\n    NodeState,\n    INodeVisualComponentProps\n  > = new VisualComponents<NodeState, INodeVisualComponentProps>({\n    [componentDefaultType]: createNode({ ports: [] }),\n    input_output_horizontal: createInputOutputHorizontalNode(),\n    input_output_vertical: createInputOutputVerticalNode(),\n    input_vertical: createInputVerticalNode(),\n    input_horizontal: createInputHorizontalNode(),\n    output_vertical: createOutputVerticalNode(),\n    output_horizontal: createOutputHorizontalNode(),\n    star: createStarNode(),\n  });\n  private _gridSnap: Point | null;\n\n  constructor() {\n    this.setGridSnap();\n    makeAutoObservable(this);\n  }\n\n  get visualComponents() {\n    return this._visualComponents;\n  }\n\n  import = (obj?: INodesSettings) => {\n    this._visualComponents.import(obj);\n    this.setGridSnap(obj?.gridSnap);\n  };\n\n  get gridSnap() {\n    return this._gridSnap;\n  }\n\n  setGridSnap = (gridSnap?: number | Point) => {\n    if (!gridSnap) {\n      this._gridSnap = null;\n    } else if (typeof gridSnap === 'number') {\n      this._gridSnap = [gridSnap, gridSnap];\n    } else if (Array.isArray(gridSnap) && gridSnap.length === 2) {\n      this._gridSnap = gridSnap;\n    }\n  };\n}\n\nexport interface INodeVisualComponentProps<TSettings = any>\n  extends IVisualComponentProps<NodeState, TSettings> {\n  draggableRef: React.RefObject<any>;\n}\n\nexport interface INodesSettings\n  extends IVisualComponentsObject<INodeVisualComponentProps> {\n  gridSnap?: number | Point;\n}\n","import { autorun, makeAutoObservable, reaction } from 'mobx';\nimport { Dictionary, isBoolean } from 'utils/common';\nimport {\n  SuccessOrErrorResult,\n  errorResult,\n  successValueResult,\n} from 'utils/result';\nimport { deepCopy } from 'utils';\nimport { guidForcedUniqueness } from 'utils/guid';\nimport { HtmlElementRefState } from 'states/htmlElementRefState';\nimport { LinkState } from 'states/linkState';\nimport { PortState, IPortStateWithoutIds } from 'states/portState';\nimport { RootStore } from 'states/rootStore';\nimport { componentDefaultType } from 'states/visualComponents';\nimport { arePointsEqual, Point } from 'utils/point';\nimport { generateTransform } from 'utils/transformation';\n\nexport class NodeState {\n  private _id: string;\n  private _label: string;\n  private _position: Point;\n  private _ports: Map<string, PortState>;\n  private _ref: HtmlElementRefState;\n  private _type: string;\n  private _selected: boolean;\n  private _extra: any;\n  private _isSelectionEnabled: boolean | null;\n  private _isDragEnabled: boolean | null;\n  private _isDragActive: boolean = false;\n\n  private _rootStore: RootStore;\n\n  constructor(rootStore: RootStore, id: string, state?: INodeStateWithoutId) {\n    this._rootStore = rootStore;\n\n    this._id = id;\n    this._ref = new HtmlElementRefState(null);\n    this._selected = false;\n    this.import(state);\n\n    makeAutoObservable(this, {\n      // @ts-ignore\n      _rootStore: false,\n    });\n\n    reaction(\n      () => [this._id, this._label, this._extra, this._type],\n      () => {\n        this.recalculatePortsSizeAndPosition();\n      }\n    );\n  }\n\n  import = (newState?: INodeStateWithoutId) => {\n    this.setPosition(newState?.position);\n    this.setType(newState?.type);\n    this.setExtra(newState?.extra);\n    this.label = newState?.label ?? '';\n    this._ports = new Map();\n    this.setIsSelectionEnabled(newState?.isSelectionEnabled);\n    this.setIsDragEnabled(newState?.isDragEnabled);\n  };\n\n  export = (): INodeStateWithId => ({\n    ...deepCopy({\n      id: this._id,\n      label: this._label,\n      position: this._position,\n      type: this._type,\n      extra: this.extra,\n      isSelectionEnabled: this._isSelectionEnabled ?? undefined,\n      isDragEnabled: this._isDragEnabled ?? undefined,\n    }),\n  });\n\n  get id() {\n    return this._id;\n  }\n\n  get label() {\n    return this._label;\n  }\n\n  set label(value: string) {\n    this._label = value;\n  }\n\n  get position() {\n    return this._position;\n  }\n\n  /**\n   * @param newPosition - new position\n   * @param ignoreSnapping - do not take into account snapping to grid\n   * @returns remainder in case snap to grid is turned on. For example if newPosition would be [22,17] and snap [10,10],\n   * the node position would be set to [20,20] and remainder equals [2,-3]\n   */\n  setPosition = (\n    newPosition: Point | null | undefined,\n    ignoreSnapping: boolean = false\n  ): Point | undefined => {\n    newPosition = newPosition ?? [0, 0];\n\n    let remainder = undefined;\n    if (!ignoreSnapping) {\n      const result = snapPositionToGrid(\n        newPosition,\n        this._rootStore.nodesSettings.gridSnap\n      );\n      newPosition = result.position;\n      remainder = result.remainder;\n    }\n\n    if (arePointsEqual(newPosition, this._position)) return remainder;\n\n    const lastPos = this._position;\n    this._position = newPosition;\n    // Do not notify if position was not initialized before\n    if (lastPos) {\n      this._rootStore.callbacks.nodePositionChanged(\n        this,\n        lastPos,\n        this._position,\n        this.isDragActive\n      );\n    }\n    return remainder;\n  };\n\n  get type() {\n    return this._type;\n  }\n\n  setType = (value: string | null | undefined) => {\n    this._type = value ?? componentDefaultType;\n  };\n\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(value: boolean) {\n    this._selected = value;\n    if (!value) {\n      this.isDragActive = false;\n    }\n  }\n\n  get extra() {\n    return this._extra;\n  }\n\n  setExtra = (value: any) => {\n    this._extra = value ?? null;\n  };\n\n  get ref() {\n    return this._ref;\n  }\n\n  get ports(): ReadonlyMap<string, PortState> {\n    return this._ports;\n  }\n\n  get transformString() {\n    return generateTransform(this._position);\n  }\n\n  get componentDefinition() {\n    const { visualComponents } = this._rootStore.nodesSettings;\n    return visualComponents.getComponent(this.type);\n  }\n\n  /**\n   * @returns Value is calculated without zoom taking into account, that is, the same as zoom would be '1'.\n   * Value can be @type {null} in case reference to real DOM object is not set.\n   */\n  get realSize(): Point | null {\n    return this._ref.realSize;\n  }\n\n  getPort = (portId: string): PortState | undefined => {\n    if (portId) {\n      return this._ports.get(portId);\n    } else return undefined;\n  };\n\n  addPort = (port: INodePortState): SuccessOrErrorResult<PortState> => {\n    if (!port || (port.id && this._ports.get(port.id))) {\n      return errorResult();\n    }\n    const newPort = new PortState(\n      this._rootStore,\n      port.id ?? guidForcedUniqueness((id) => !!this._ports.get(id)),\n      this._id,\n      port\n    );\n    this._ports.set(newPort.id, newPort);\n    return successValueResult(newPort);\n  };\n\n  removePort = (portId: string): boolean => {\n    if (portId && this._ports.get(portId)) {\n      this._ports.delete(portId);\n      this._rootStore.linksStore.removePortLinks(this._id, portId);\n      return true;\n    }\n    return false;\n  };\n\n  getPortOrThrowException = (portId: string): PortState => {\n    const port = this.getPort(portId);\n    if (port) return port;\n    else\n      throw `Port with id '${portId}' does not exist in the node '${this._id}'`;\n  };\n\n  get connectedExternalPorts(): Dictionary<PortState[]> {\n    const keyValues = Object.values(this.ports).map((p) => [\n      p.id,\n      p.connectedPorts,\n    ]);\n    return Object.fromEntries(keyValues);\n  }\n\n  get connectedLinks(): LinkState[] {\n    return this._rootStore.linksStore.getNodeLinks(this._id);\n  }\n\n  recalculatePortsSizeAndPosition = () => {\n    this._ports.forEach((p) => p.recalculateSizeAndPosition());\n  };\n\n  get isSelectionEnabled(): boolean {\n    return this._isSelectionEnabled === null\n      ? this._rootStore.diagramSettings.userInteraction.nodeSelection\n      : this._isSelectionEnabled;\n  }\n\n  setIsSelectionEnabled = (value: boolean | null | undefined) => {\n    this._isSelectionEnabled = isBoolean(value) ? value : null;\n  };\n\n  get isDragEnabled(): boolean {\n    return (\n      (this._isDragEnabled === null\n        ? this._rootStore.diagramSettings.userInteraction.nodeDrag\n        : this._isDragEnabled) && this.isSelectionEnabled\n    );\n  }\n\n  setIsDragEnabled = (value: boolean | null | undefined) => {\n    this._isDragEnabled = isBoolean(value) ? value : null;\n  };\n\n  get isDragActive() {\n    return this._isDragActive;\n  }\n\n  set isDragActive(value) {\n    if (this._isDragActive != value) {\n      this._isDragActive = value;\n    }\n  }\n}\n\nfunction snapPositionToGrid(position: Point, snap: Point | null) {\n  if (!snap)\n    return {\n      position,\n      remainder: undefined,\n    };\n\n  const resultX = snapPositionValueToGridValue(position[0], snap[0]);\n  const resultY = snapPositionValueToGridValue(position[1], snap[1]);\n\n  return {\n    position: [resultX.value, resultY.value] as Point,\n    remainder: [resultX.remainder, resultY.remainder] as Point,\n  };\n}\n\nfunction snapPositionValueToGridValue(value: number, snapValue: number) {\n  const mod = value % snapValue;\n  let remainder = 0;\n  let newValue = value;\n  if (snapValue / 2 > mod) {\n    newValue -= mod;\n    remainder = mod;\n  } else {\n    newValue += snapValue - mod;\n    remainder = -(snapValue - mod);\n  }\n  return { value: newValue, remainder };\n}\n\nexport interface INodeStateWithoutId {\n  label?: string;\n  position: Point;\n  type?: string;\n  extra?: any;\n  isSelectionEnabled?: boolean;\n  isDragEnabled?: boolean;\n}\n\nexport interface INodePortState extends IPortStateWithoutIds {\n  id?: string;\n}\n\nexport interface INodeStateWithId extends INodeStateWithoutId {\n  id: string;\n}\n\nexport interface INodeState extends INodeStateWithoutId {\n  id?: string;\n}\n","import { makeAutoObservable } from 'mobx';\nimport { BoundingBox } from 'utils/common';\nimport {\n  SuccessOrErrorResult,\n  errorResult,\n  successValueResult,\n  errorValueResult,\n} from 'utils/result';\nimport { guidForcedUniqueness } from 'utils/guid';\nimport { NodeState, INodeState, INodeStateWithId } from 'states/nodeState';\nimport { RootStore } from 'states/rootStore';\nimport { addPoints, multiplyPoint, Point, subtractPoints } from 'utils/point';\nimport { DragState } from 'states/dragState';\n\nexport class NodesStore {\n  private _nodes = new Map<string, NodeState>();\n  private _rootStore;\n\n  constructor(rootStore: RootStore) {\n    makeAutoObservable(this);\n    this._rootStore = rootStore;\n  }\n\n  get nodes(): ReadonlyMap<string, NodeState> {\n    return this._nodes;\n  }\n\n  import = (newNodes?: INodeState[]) => {\n    this._nodes = new Map();\n    if (newNodes) {\n      let results = this._addNodesInternal(newNodes, false);\n      results.length != 0 &&\n        this._rootStore.callbacks.nodesAdded(results, true);\n    }\n  };\n\n  export = (): INodeStateWithId[] =>\n    Array.from(this._nodes).map(([key, value]) => value.export());\n\n  addNodes = (\n    nodes: INodeState[],\n    rewriteIfExists: boolean = false\n  ): SuccessOrErrorResult<NodeState, INodeState>[] => {\n    let results = this._addNodesInternal(nodes, rewriteIfExists);\n    results.length != 0 &&\n      this._rootStore.callbacks.nodesAdded(results, false);\n    return results;\n  };\n\n  private _addNodesInternal = (\n    nodes: INodeState[],\n    rewriteIfExists: boolean\n  ): SuccessOrErrorResult<NodeState, INodeState>[] => {\n    if (!Array.isArray(nodes) || nodes.length == 0) return [];\n\n    let results = nodes.map((node) =>\n      this._addNodeInternal(node, rewriteIfExists)\n    );\n    return results;\n  };\n\n  addNode = (\n    node: INodeState,\n    rewriteIfExists: boolean = false\n  ): SuccessOrErrorResult<NodeState, INodeState> => {\n    let result = this._addNodeInternal(node, rewriteIfExists);\n    this._rootStore.callbacks.nodesAdded([result], false);\n    return result;\n  };\n\n  private _addNodeInternal = (\n    node: INodeState,\n    rewriteIfExists: boolean\n  ): SuccessOrErrorResult<NodeState, INodeState> => {\n    if (!node) return errorValueResult(node, 'Node object is null or undefined');\n\n    if (!rewriteIfExists && node.id && this._nodes.has(node.id))\n      return errorValueResult(node, `Node with id '${node.id}' already exists`);\n\n    const newNode = new NodeState(\n      this._rootStore,\n      node.id ?? guidForcedUniqueness((id) => this._nodes.has(id)),\n      node\n    );\n    this._nodes.set(newNode.id, newNode);\n    return successValueResult(newNode);\n  };\n\n  removeNode = (nodeId: string): boolean => {\n    const node = this._nodes.get(nodeId);\n    if (node) {\n      this._rootStore.linksStore.removeNodeLinks(nodeId);\n      this._rootStore.selectionState.unselect(node);\n      this._nodes.delete(nodeId);\n      return true;\n    }\n    return false;\n  };\n\n  getNode = (nodeId: string): NodeState | undefined => {\n    return this._nodes.get(nodeId);\n  };\n\n  /**\n   * @returns Values are calculated without zoom taking into account, that is, the same as zoom would be '1'\n   */\n  getNodesBoundingBox = (): BoundingBox => {\n    let topLeftCorner: Point = [\n      Number.POSITIVE_INFINITY,\n      Number.POSITIVE_INFINITY,\n    ];\n    let bottomRightCorner: Point = [\n      Number.NEGATIVE_INFINITY,\n      Number.NEGATIVE_INFINITY,\n    ];\n\n    this._nodes.forEach((node) => {\n      const pos = node.position;\n      const size = node.realSize ?? [0, 0];\n\n      topLeftCorner = [\n        Math.min(topLeftCorner[0], pos[0]),\n        Math.min(topLeftCorner[1], pos[1]),\n      ];\n\n      bottomRightCorner = [\n        Math.max(bottomRightCorner[0], pos[0] + size[0]),\n        Math.max(bottomRightCorner[1], pos[1] + size[1]),\n      ];\n    });\n\n    if (this._nodes.size == 0) {\n      topLeftCorner = [0, 0];\n      bottomRightCorner = [100, 100];\n    }\n\n    return {\n      topLeftCorner,\n      bottomRightCorner,\n      size: subtractPoints(bottomRightCorner, topLeftCorner),\n    };\n  };\n}\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport type { IPortVisualComponentProps } from 'states/portsSettings';\nimport type { IComponentDefinition } from 'states/visualComponentState';\nimport { Point } from 'utils/point';\n\nexport interface IPortDefaultSettings {\n  size: Point;\n  opacity?: number;\n  color: string;\n  dragColor: string;\n  hoverColor: string;\n  invalidColor: string;\n}\n\nexport const PortInnerDefault: React.FC<\n  IPortVisualComponentProps<IPortDefaultSettings>\n> = observer(({ entity: port, settings }) => {\n  const finalSettings = {\n    ...portDefaultSettings,\n    ...settings,\n  };\n\n  let color = finalSettings.color;\n  if (port.dragging) color = finalSettings.dragColor;\n  else if (port.hovered && port.validForConnection)\n    color = finalSettings.hoverColor;\n  else if (port.hovered && !port.validForConnection)\n    color = finalSettings.invalidColor;\n\n  return (\n    <div\n      style={{\n        width: finalSettings.size[0],\n        height: finalSettings.size[1],\n        opacity: finalSettings.opacity,\n        backgroundColor: color,\n        borderRadius: '2px',\n      }}\n    ></div>\n  );\n});\n\nconst portDefaultSettings: IPortDefaultSettings = {\n  size: [10, 10],\n  color: '#6eb7ff',\n  dragColor: '#49f860',\n  hoverColor: '#49f860',\n  invalidColor: '#fa4040',\n};\n\nexport function createPortInnerDefault(\n  settings?: Partial<IPortDefaultSettings>\n): IComponentDefinition<IPortVisualComponentProps, IPortDefaultSettings> {\n  return {\n    component: PortInnerDefault,\n    settings: {\n      ...portDefaultSettings,\n      ...settings,\n    },\n  };\n}\n","import { makeAutoObservable } from 'mobx';\nimport { createPortInnerDefault } from 'components/PortInnerDefault';\nimport { PortState } from 'states/portState';\nimport {\n  VisualComponents,\n  componentDefaultType,\n  IVisualComponentsObject,\n} from 'states/visualComponents';\nimport { IVisualComponentProps } from 'states/visualComponentState';\n\nexport class PortsSettings {\n  private _portVisualComponents: VisualComponents<\n    PortState,\n    IPortVisualComponentProps\n  > = new VisualComponents<PortState, IPortVisualComponentProps>({\n    [componentDefaultType]: createPortInnerDefault(),\n  });\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get portVisualComponents() {\n    return this._portVisualComponents;\n  }\n\n  import = (obj?: IPortsSettings) => {\n    this.portVisualComponents.import({\n      components: obj?.portComponents,\n      defaultType: obj?.portDefaultType,\n    });\n  };\n}\n\nexport interface IPortVisualComponentProps<TSettings = any>\n  extends IVisualComponentProps<PortState, TSettings> {}\n\nexport interface IPortsSettings {\n  portComponents?: IVisualComponentsObject<IPortVisualComponentProps>['components'];\n  portDefaultType?: IVisualComponentsObject<IPortVisualComponentProps>['defaultType'];\n}\n","import { makeAutoObservable } from 'mobx';\nimport { LinkState } from 'states/linkState';\nimport { NodeState } from 'states/nodeState';\n\nexport class SelectionState {\n  private _selectedItems: SelectableItem[] = [];\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get selectedItems(): Readonly<SelectableItem[]> {\n    return this._selectedItems;\n  }\n\n  get selectedNodes(): NodeState[] {\n    return this.selectedItems.filter(\n      (i) => i instanceof NodeState\n    ) as NodeState[];\n  }\n\n  select = (item: SelectableItem, unselectOther: boolean = false): boolean => {\n    if (unselectOther) this.unselectAll();\n\n    if (!item.selected) {\n      item.selected = true;\n      this._selectedItems = [...this._selectedItems, item];\n\n      return true;\n    } else return false;\n  };\n\n  switch = (item: SelectableItem) => {\n    if (item.selected) {\n      this.unselect(item);\n    } else {\n      this.select(item);\n    }\n  };\n\n  unselect = (item: SelectableItem): boolean => {\n    if (item.selected) {\n      item.selected = false;\n      this._selectedItems = this._selectedItems.filter((i) => i !== item);\n      return true;\n    } else return false;\n  };\n\n  unselectAll = () => {\n    this._selectedItems.forEach((i) => (i.selected = false));\n    this._selectedItems = [];\n  };\n\n  unselectItems = (itemsToClear: Readonly<SelectableItem[]>) => {\n    itemsToClear.forEach((i) => this.unselect(i));\n  };\n}\n\nexport type SelectableItem = NodeState | LinkState;\n","import { Callbacks, SelectionState } from 'index';\nimport { makeAutoObservable } from 'mobx';\nimport { NodeState } from 'states/nodeState';\nimport { addPoints, Point } from 'utils/point';\n\n/**\n * Encapsulate logic for dragging mechanism. Right now only nodes are supposed to be dragged.\n */\nexport class DragState {\n  private _nodesBeingDragged = new Set<NodeState>();\n\n  // In case the snap to grid option is enabled in settings\n  private _remaindersFromDrags = new Map<string, Point | undefined>();\n\n  private _selectionState: SelectionState;\n  private _callbacks: Callbacks;\n\n  constructor(selectionState: SelectionState, callbacks: Callbacks) {\n    makeAutoObservable(this);\n    this._selectionState = selectionState;\n    this._callbacks = callbacks;\n  }\n\n  get isActive() {\n    return this._nodesBeingDragged.size !== 0;\n  }\n\n  startDragging = (nodeToDrag: NodeState) => {\n    if (!nodeToDrag.isDragEnabled || this.isActive) return;\n\n    if (nodeToDrag.selected) {\n      this._selectionState.unselectItems(\n        this._selectionState.selectedItems.filter(\n          (i) => !(i instanceof NodeState) || !i.isDragEnabled\n        )\n      );\n    } else {\n      this._selectionState.unselectAll();\n      this._selectionState.select(nodeToDrag);\n    }\n\n    this._selectionState.selectedNodes.forEach((n) => {\n      n.isDragActive = true;\n      this._nodesBeingDragged.add(n);\n    });\n\n    this._callbacks.dragStateChanged(this._selectionState.selectedNodes, true);\n  };\n\n  /**\n   * Drag by a vector\n   * @param vector vector to drag by which takes into account diagram zoom\n   */\n  dragBy = (vector: Point) => {\n    this._nodesBeingDragged.forEach((n) => {\n      const newPosition = addPoints(\n        n.position,\n        vector,\n        this._remaindersFromDrags.get(n.id)\n      );\n      const newRemainder = n.setPosition(newPosition);\n      this._remaindersFromDrags.set(n.id, newRemainder);\n    });\n  };\n\n  stopDragging = () => {\n    this._nodesBeingDragged.forEach((n) => (n.isDragActive = false));\n    this._nodesBeingDragged.clear();\n    this._remaindersFromDrags.clear();\n    this._callbacks.dragStateChanged(this._selectionState.selectedNodes, false);\n  };\n}\n","import { makeAutoObservable } from 'mobx';\nimport { RootStore } from 'states/rootStore';\n\nexport class CommandExecutor {\n  private _rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    makeAutoObservable(this);\n    this._rootStore = rootStore;\n  }\n\n  execute = (command: ICommand) => {\n    command.execute(this._rootStore);\n  };\n}\n\ninterface ICommand {\n  execute(rootStore: RootStore): any;\n}\n","import { Callbacks, ICallbacks } from 'states/callbacks';\nimport { DiagramSettings, IDiagramSettings } from 'states/diagramSettings';\nimport { DiagramState } from 'states/diagramState';\nimport { LinksSettings, ILinksSettings } from 'states/linksSettings';\nimport { LinksStore } from 'states/linksStore';\nimport { ILinkState } from 'states/linkState';\nimport { NodesSettings, INodesSettings } from 'states/nodesSettings';\nimport { NodesStore } from 'states/nodesStore';\nimport { INodeState } from 'states/nodeState';\nimport { PortsSettings, IPortsSettings } from 'states/portsSettings';\nimport { SelectionState } from 'states/selectionState';\nimport { DragState } from 'states/dragState';\nimport { CommandExecutor } from 'states/commandExecutor';\n\nexport class RootStore {\n  private _diagramState: DiagramState;\n\n  private _nodesStore: NodesStore;\n  private _linksStore: LinksStore;\n  private _selectionState: SelectionState;\n  private _dragState: DragState;\n  private _commandExecutor: CommandExecutor;\n\n  private _diagramSettings: DiagramSettings;\n  private _nodesSettings: NodesSettings;\n  private _portsSettings: PortsSettings;\n  private _linksSettings: LinksSettings;\n  private _callbacks: Callbacks;\n\n  constructor() {\n    this._diagramSettings = new DiagramSettings();\n    this._nodesSettings = new NodesSettings();\n    this._linksSettings = new LinksSettings();\n    this._portsSettings = new PortsSettings();\n    this._callbacks = new Callbacks(this);\n\n    this._diagramState = new DiagramState(this);\n\n    this._commandExecutor = new CommandExecutor(this);\n    this._nodesStore = new NodesStore(this);\n    this._linksStore = new LinksStore(this);\n    this._selectionState = new SelectionState();\n    this._dragState = new DragState(this._selectionState, this._callbacks);\n  }\n\n  get diagramState() {\n    return this._diagramState;\n  }\n\n  get nodesStore() {\n    return this._nodesStore;\n  }\n\n  get linksStore() {\n    return this._linksStore;\n  }\n\n  get diagramSettings() {\n    return this._diagramSettings;\n  }\n\n  get nodesSettings() {\n    return this._nodesSettings;\n  }\n\n  get linksSettings() {\n    return this._linksSettings;\n  }\n\n  get portsSettings() {\n    return this._portsSettings;\n  }\n\n  get callbacks() {\n    return this._callbacks;\n  }\n\n  get selectionState() {\n    return this._selectionState;\n  }\n\n  get dragState() {\n    return this._dragState;\n  }\n\n  get commandExecutor() {\n    return this._commandExecutor;\n  }\n\n  importState = (nodes?: INodeState[], links?: ILinkState[]) => {\n    this._nodesStore.import(nodes);\n    this._linksStore.import(links);\n  };\n\n  export = (): { nodes: INodeState[]; links: ILinkState[] } => ({\n    nodes: this._nodesStore.export(),\n    links: this._linksStore.export(),\n  });\n\n  importSettings = (settings: ISettings) => {\n    this._diagramSettings.import(settings.diagram);\n    this._nodesSettings.import(settings.nodes);\n    this._linksSettings.import(settings.links);\n    this._portsSettings.import(settings.ports);\n    this._callbacks.import(settings.callbacks);\n  };\n}\n\nexport interface ISettings {\n  diagram?: IDiagramSettings;\n  nodes?: INodesSettings;\n  links?: ILinksSettings;\n  ports?: IPortsSettings;\n  callbacks?: ICallbacks;\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useEffect, useMemo } from 'react';\nimport { InnerDiagram } from 'components/DiagramInner';\nimport type { ISettings } from 'states/rootStore';\nimport { RootStore } from 'states/rootStore';\nimport type { INodeState } from 'states/nodeState';\nimport type { ILinkState } from 'states/linkState';\n\nimport '../Diagram.css';\n\nexport const RootStoreContext = React.createContext<RootStore | null>(null);\n\nexport function Diagram(props: IDiagramProps) {\n  const rootStore = useMemo(() => {\n    const store = new RootStore();\n    props.settings && store.importSettings(props.settings);\n    store.importState(\n      props.initState?.nodes ?? [],\n      props.initState?.links ?? []\n    );\n    return store;\n  }, []);\n\n  useEffect(() => {\n    if (props.storeRef) {\n      props.storeRef.current = rootStore;\n    }\n  }, [rootStore, props.storeRef]);\n\n  return (\n    <RootStoreContext.Provider value={rootStore}>\n      <InnerDiagram />\n    </RootStoreContext.Provider>\n  );\n}\n\nexport interface IDiagramProps {\n  settings?: ISettings;\n  initState?: IDiagramInitState;\n  storeRef?: React.MutableRefObject<RootStore | null>;\n}\n\nexport interface IDiagramInitState {\n  nodes?: INodeState[];\n  links?: ILinkState[];\n}\n\nDiagram.displayName = 'Diagram';\n","import { useContext } from \"react\";\nimport { RootStoreContext } from \"components/Diagram\";\nimport { RootStore } from \"states/rootStore\";\n\nexport const useRootStore = () => useContext(RootStoreContext) as RootStore;","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { useRootStore } from 'hooks/useRootStore';\n\nexport const BackgroundWrapper = observer(() => {\n  const { diagramSettings, diagramState } = useRootStore();\n\n  return (\n    <div className='react_fast_diagram_BackgroundWrapper'>\n      <diagramSettings.backgroundComponentState.component\n        diagramOffset={diagramState.offset}\n        diagramZoom={diagramState.zoom}\n        settings={diagramSettings.backgroundComponentState.settings}\n      />\n    </div>\n  );\n});\n","export type Direction = 'left' | 'right' | 'up' | 'down';\nexport type DirectionWithDiagonals =\n  | Direction\n  | 'left-down'\n  | 'left-up'\n  | 'right-down'\n  | 'right-up';\n\nexport const positionValues = <const>['left', 'top', 'right', 'bottom'];\nexport type Position = typeof positionValues[number];\n\nexport type CornerPosition =\n  | 'left-top'\n  | 'right-top'\n  | 'right-bottom'\n  | 'left-bottom';\n","import React, { useMemo } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { VisualComponent } from 'states/visualComponentState';\nimport { positionValues, Position } from 'utils/position';\nimport { IPortState } from 'states/portState';\nimport { Port } from './Port';\n\nexport interface IPortsContainerSettings {\n  style?: React.CSSProperties;\n  gapBetweenPorts: string;\n  /**\n   * If number - offset from origin position in direction from the center of parent element.\n   * If Point - horizontal offset and vertical offset.\n   */\n  offsetFromOriginPosition?: number;\n}\n\nexport interface IPortsContainerProps {\n  position: Position;\n  ports?: IPortState[];\n}\n\nconst PortsContainer: React.FC<\n  IPortsContainerProps & IPortsContainerSettings\n> = observer(\n  ({ position, ports, style, gapBetweenPorts, offsetFromOriginPosition }) => {\n    const portsModified = useMemo(\n      () =>\n        ports &&\n        ports.map(\n          (p) =>\n            ({\n              linkDirection: positionToDirection[position],\n              ...p,\n            } as IPortState)\n        ),\n      [position, ports]\n    );\n\n    if (!portsModified || portsModified.length === 0) return null;\n\n    let className = 'react_fast_diagram_flex_gap ';\n    if (position === 'top' || position === 'bottom') {\n      className += 'react_fast_diagram_flex_gap_x';\n    } else {\n      className += 'react_fast_diagram_flex_gap_y';\n    }\n\n    const positionStyle = {\n      position: 'absolute',\n      left: position === 'left' ? 0 : undefined,\n      top:\n        position === 'left' || position === 'right' || position === 'top'\n          ? 0\n          : undefined,\n      right: position === 'right' ? 0 : undefined,\n      bottom: position === 'bottom' ? 0 : undefined,\n      height: position === 'left' || position === 'right' ? '100%' : undefined,\n      width: position === 'top' || position === 'bottom' ? '100%' : undefined,\n    };\n\n    const offsetFromOriginPositionStyle = {};\n    if (offsetFromOriginPosition && positionValues.includes(position)) {\n      offsetFromOriginPositionStyle[position] = -offsetFromOriginPosition;\n    }\n\n    return (\n      <div\n        className={className}\n        style={{\n          // @ts-ignore\n          '--gap': gapBetweenPorts,\n          ...style,\n          ...positionStyle,\n          ...offsetFromOriginPositionStyle,\n        }}\n      >\n        {portsModified &&\n          portsModified.map((port) => <Port {...port} key={port.id} />)}\n      </div>\n    );\n  }\n);\n\nconst positionToDirection = {\n  left: 'left',\n  top: 'up',\n  right: 'right',\n  bottom: 'down',\n};\n\nexport function createPortsContainer(\n  settings?: Partial<IPortsContainerSettings>\n): VisualComponent<IPortsContainerProps> {\n  return (props: IPortsContainerProps) => (\n    <PortsContainer\n      {...{ ...defaultPortsContainerSettings, ...settings }}\n      {...props}\n    />\n  );\n}\n\nconst defaultPortsContainerSettings: IPortsContainerSettings = {\n  gapBetweenPorts: '8px',\n};\n","import React, { useMemo } from 'react';\nimport { Diagram } from 'components/Diagram';\nimport type { IDiagramInitState } from 'components/Diagram';\nimport { RootStore } from 'states/rootStore';\nimport type { ISettings } from 'states/rootStore';\nimport { useNotifyRef } from 'hooks/useNotifyRef';\n\nexport const useDiagram = (\n  initState?: IDiagramInitState,\n  settings?: ISettings\n) => {\n  const storeRef = useNotifyRef<RootStore | null>(null);\n\n  const obj = useMemo(\n    () => ({\n      Diagram: () => (\n        <Diagram\n          storeRef={storeRef}\n          initState={initState}\n          settings={settings}\n        />\n      ),\n      storeRef,\n    }),\n    []\n  );\n\n  return obj;\n};\n","import { ILinkPathConstructor, ILinkPathConstructorEndpointInfo } from \"states/linksSettings\";\n\nfunction straightLinkPathConstructor(\n  source: ILinkPathConstructorEndpointInfo,\n  target: ILinkPathConstructorEndpointInfo\n): string {\n  const path = `M ${source.point[0]} ${source.point[1]}, ${target.point[0]} ${target.point[1]}`;\n\n  return path;\n}\n\nexport function createStraightLinkPathConstructor(): ILinkPathConstructor {\n  return straightLinkPathConstructor;\n}\n"],"names":["makeAutoObservable","makeObservable","observable","computed","action","observer","defaultSettings","useMemo","React","useState","useEffect","useRef","selectDelay","useGesture","useCallback","className","useLayoutEffect","reaction","useContext"],"mappings":"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"}