.react_fast_diagram_DiagramInner {
  width: 100%;
  height: 100%;
  min-height: 100%;
  position: relative;
  overflow: hidden;
  touch-action: none;
  user-select: none;
}

.react_fast_diagram_DiagramInner > * {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  color: black;
}

.react_fast_diagram_DiagramInner_DraggablePart {
  width: 100%;
  height: 100%;
  position: absolute;
  overflow: visible;
  transform-origin: 0px 0px;
  top: 0px;
  left: 0px;
  /* useGestures hook use targetTouches instead of simply touches, 
  so we should set this property to Movable, otherwise if user put 
  one finger above Movable and another above DiagramInner, the hook 
  will not trigger pinch gesture */
  pointer-events: none;
}

.react_fast_diagram_Layer {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  overflow: visible;
}

.react_fast_diagram_NodeWrapper {
  position: absolute;
  top: 0;
  left: 0;
  width: fit-content;
  height: fit-content;
  pointer-events: auto;
}

.react_fast_diagram_Node_Default {
  min-width: 10px;
  min-height: 10px;
  border-radius: 3px;
  background-color: white;
  border: #c2c2c2 solid 1px;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  margin: auto;
  font-size: small;
}

.react_fast_diagram_PortContainer_Default {
  display: flex;
  align-items: center;
  justify-content: center;
}

.react_fast_diagram_Node_Default > * {
  text-align: center;
  margin: auto;
}

.react_fast_diagram_disabled_user_select {
  user-select: none;
}

.react_fast_diagram_BackgroundWrapper {
  height: 100%;
  width: 100%;
  pointer-events: none;
}

.react_fast_diagram_Background_Default {
  height: 100%;
  width: 100%;
}

.react_fast_diagram_Minicontrol_Default {
  position: absolute;
  height: fit-content;
  display: flex;
  flex-direction: column;
}

.react_fast_diagram_Minicontrol_Default_Btn {
  background-color: white;
  border: 1px solid rgb(209, 209, 209);
  color: black;
  padding: 2px;
  font-size: 16px;
  cursor: pointer;
  text-align: center;
}

@media (hover: hover) and (pointer: fine) {
  .react_fast_diagram_Minicontrol_Default_Btn:hover {
    background-color: rgb(228, 228, 228);
  }
}

.react_fast_diagram_Port {
  cursor: pointer;
}

/* Containers with gap between items */

.react_fast_diagram_flex_gap {
  --gap: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.react_fast_diagram_flex_gap_y {
  flex-direction: column;
  height: 100%;
}

.react_fast_diagram_flex_gap_y > * {
  margin: var(--gap) 0 0 0;
}

.react_fast_diagram_flex_gap_y > :first-child {
  margin: 0;
}

.react_fast_diagram_flex_gap_x {
  flex-direction: row;
  width: 100%;
}

.react_fast_diagram_flex_gap_x > * {
  margin: 0 0 0 var(--gap);
}

.react_fast_diagram_flex_gap_x > :first-child {
  margin: 0;
}

/* Containers with gap between items */
